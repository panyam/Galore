{
  "slr": {
    '0': {
      items: [
        'Start ->  . pgm',
        'pgm ->  . instlist',
        'inst ->  . LOD intt intt intt',
        'inst ->  . STR intt intt intt',
        'inst ->  . JMP intt intt intt',
        'inst ->  . BEQ intt intt intt',
        'inst ->  . BLT intt intt intt',
        'inst ->  . RDN intt',
        'inst ->  . PTN intt',
        'inst ->  . HLT intt',
        'instlist ->  . label COLON inst instlist',
        'instlist ->  . inst instlist',
        'instlist ->  . ',
        'label ->  . LABEL',
        'inst ->  . ADD intt intt intt',
        'inst ->  . SUB intt intt intt',
        'inst ->  . MUL intt intt intt',
        'inst ->  . MOV intt intt'
      ],
      actions: {
        '<EOF>': [ 'R <instlist -> >' ],
        pgm: [ '1' ],
        instlist: [ '2' ],
        label: [ '3' ],
        inst: [ '4' ],
        ADD: [ 'S5' ],
        SUB: [ 'S6' ],
        MUL: [ 'S7' ],
        MOV: [ 'S8' ],
        LOD: [ 'S9' ],
        STR: [ 'S10' ],
        JMP: [ 'S11' ],
        BEQ: [ 'S12' ],
        BLT: [ 'S13' ],
        RDN: [ 'S14' ],
        PTN: [ 'S15' ],
        HLT: [ 'S16' ],
        LABEL: [ 'S17' ]
      },
      next: {
        pgm: 1,
        instlist: 2,
        label: 3,
        inst: 4,
        ADD: 5,
        SUB: 6,
        MUL: 7,
        MOV: 8,
        LOD: 9,
        STR: 10,
        JMP: 11,
        BEQ: 12,
        BLT: 13,
        RDN: 14,
        PTN: 15,
        HLT: 16,
        LABEL: 17
      }
    },
    '1': {
      items: [ 'Start -> pgm . ' ],
      actions: { '<EOF>': [ 'Acc' ] },
      next: {}
    },
    '2': {
      items: [ 'pgm -> instlist . ' ],
      actions: { '<EOF>': [ 'R <pgm -> instlist>' ] },
      next: {}
    },
    '3': {
      items: [ 'instlist -> label . COLON inst instlist' ],
      actions: { COLON: [ 'S18' ] },
      next: { COLON: 18 }
    },
    '4': {
      items: [
        'inst ->  . LOD intt intt intt',
        'inst ->  . STR intt intt intt',
        'inst ->  . JMP intt intt intt',
        'inst ->  . BEQ intt intt intt',
        'inst ->  . BLT intt intt intt',
        'inst ->  . RDN intt',
        'inst ->  . PTN intt',
        'inst ->  . HLT intt',
        'instlist ->  . label COLON inst instlist',
        'instlist -> inst . instlist',
        'instlist ->  . inst instlist',
        'instlist ->  . ',
        'label ->  . LABEL',
        'inst ->  . ADD intt intt intt',
        'inst ->  . SUB intt intt intt',
        'inst ->  . MUL intt intt intt',
        'inst ->  . MOV intt intt'
      ],
      actions: {
        '<EOF>': [ 'R <instlist -> >' ],
        instlist: [ '19' ],
        label: [ '3' ],
        inst: [ '4' ],
        ADD: [ 'S5' ],
        SUB: [ 'S6' ],
        MUL: [ 'S7' ],
        MOV: [ 'S8' ],
        LOD: [ 'S9' ],
        STR: [ 'S10' ],
        JMP: [ 'S11' ],
        BEQ: [ 'S12' ],
        BLT: [ 'S13' ],
        RDN: [ 'S14' ],
        PTN: [ 'S15' ],
        HLT: [ 'S16' ],
        LABEL: [ 'S17' ]
      },
      next: {
        instlist: 19,
        label: 3,
        inst: 4,
        ADD: 5,
        SUB: 6,
        MUL: 7,
        MOV: 8,
        LOD: 9,
        STR: 10,
        JMP: 11,
        BEQ: 12,
        BLT: 13,
        RDN: 14,
        PTN: 15,
        HLT: 16,
        LABEL: 17
      }
    },
    '5': {
      items: [
        'inst -> ADD . intt intt intt',
        'intt ->  . INT',
        'intt ->  . label',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '21' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 21, LABEL: 17, INT: 22 }
    },
    '6': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> SUB . intt intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '23' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 23, LABEL: 17, INT: 22 }
    },
    '7': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> MUL . intt intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '24' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 24, LABEL: 17, INT: 22 }
    },
    '8': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> MOV . intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '25' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 25, LABEL: 17, INT: 22 }
    },
    '9': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> LOD . intt intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '26' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 26, LABEL: 17, INT: 22 }
    },
    '10': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> STR . intt intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '27' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 27, LABEL: 17, INT: 22 }
    },
    '11': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> JMP . intt intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '28' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 28, LABEL: 17, INT: 22 }
    },
    '12': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> BEQ . intt intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '29' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 29, LABEL: 17, INT: 22 }
    },
    '13': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> BLT . intt intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '30' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 30, LABEL: 17, INT: 22 }
    },
    '14': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> RDN . intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '31' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 31, LABEL: 17, INT: 22 }
    },
    '15': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> PTN . intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '32' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 32, LABEL: 17, INT: 22 }
    },
    '16': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> HLT . intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '33' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 33, LABEL: 17, INT: 22 }
    },
    '17': {
      items: [ 'label -> LABEL . ' ],
      actions: {
        '<EOF>': [ 'R <label -> LABEL>' ],
        COLON: [ 'R <label -> LABEL>' ],
        ADD: [ 'R <label -> LABEL>' ],
        SUB: [ 'R <label -> LABEL>' ],
        MUL: [ 'R <label -> LABEL>' ],
        MOV: [ 'R <label -> LABEL>' ],
        LOD: [ 'R <label -> LABEL>' ],
        STR: [ 'R <label -> LABEL>' ],
        JMP: [ 'R <label -> LABEL>' ],
        BEQ: [ 'R <label -> LABEL>' ],
        BLT: [ 'R <label -> LABEL>' ],
        RDN: [ 'R <label -> LABEL>' ],
        PTN: [ 'R <label -> LABEL>' ],
        HLT: [ 'R <label -> LABEL>' ],
        LABEL: [ 'R <label -> LABEL>' ],
        INT: [ 'R <label -> LABEL>' ]
      },
      next: {}
    },
    '18': {
      items: [
        'inst ->  . LOD intt intt intt',
        'inst ->  . STR intt intt intt',
        'inst ->  . JMP intt intt intt',
        'inst ->  . BEQ intt intt intt',
        'inst ->  . BLT intt intt intt',
        'inst ->  . RDN intt',
        'inst ->  . PTN intt',
        'inst ->  . HLT intt',
        'instlist -> label COLON . inst instlist',
        'inst ->  . ADD intt intt intt',
        'inst ->  . SUB intt intt intt',
        'inst ->  . MUL intt intt intt',
        'inst ->  . MOV intt intt'
      ],
      actions: {
        inst: [ '34' ],
        ADD: [ 'S5' ],
        SUB: [ 'S6' ],
        MUL: [ 'S7' ],
        MOV: [ 'S8' ],
        LOD: [ 'S9' ],
        STR: [ 'S10' ],
        JMP: [ 'S11' ],
        BEQ: [ 'S12' ],
        BLT: [ 'S13' ],
        RDN: [ 'S14' ],
        PTN: [ 'S15' ],
        HLT: [ 'S16' ]
      },
      next: {
        inst: 34,
        ADD: 5,
        SUB: 6,
        MUL: 7,
        MOV: 8,
        LOD: 9,
        STR: 10,
        JMP: 11,
        BEQ: 12,
        BLT: 13,
        RDN: 14,
        PTN: 15,
        HLT: 16
      }
    },
    '19': {
      items: [ 'instlist -> inst instlist . ' ],
      actions: { '<EOF>': [ 'R <instlist -> inst instlist>' ] },
      next: {}
    },
    '20': {
      items: [ 'intt -> label . ' ],
      actions: {
        '<EOF>': [ 'R <intt -> label>' ],
        ADD: [ 'R <intt -> label>' ],
        SUB: [ 'R <intt -> label>' ],
        MUL: [ 'R <intt -> label>' ],
        MOV: [ 'R <intt -> label>' ],
        LOD: [ 'R <intt -> label>' ],
        STR: [ 'R <intt -> label>' ],
        JMP: [ 'R <intt -> label>' ],
        BEQ: [ 'R <intt -> label>' ],
        BLT: [ 'R <intt -> label>' ],
        RDN: [ 'R <intt -> label>' ],
        PTN: [ 'R <intt -> label>' ],
        HLT: [ 'R <intt -> label>' ],
        LABEL: [ 'R <intt -> label>' ],
        INT: [ 'R <intt -> label>' ]
      },
      next: {}
    },
    '21': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> ADD intt . intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '35' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 35, LABEL: 17, INT: 22 }
    },
    '22': {
      items: [ 'intt -> INT . ' ],
      actions: {
        '<EOF>': [ 'R <intt -> INT>' ],
        ADD: [ 'R <intt -> INT>' ],
        SUB: [ 'R <intt -> INT>' ],
        MUL: [ 'R <intt -> INT>' ],
        MOV: [ 'R <intt -> INT>' ],
        LOD: [ 'R <intt -> INT>' ],
        STR: [ 'R <intt -> INT>' ],
        JMP: [ 'R <intt -> INT>' ],
        BEQ: [ 'R <intt -> INT>' ],
        BLT: [ 'R <intt -> INT>' ],
        RDN: [ 'R <intt -> INT>' ],
        PTN: [ 'R <intt -> INT>' ],
        HLT: [ 'R <intt -> INT>' ],
        LABEL: [ 'R <intt -> INT>' ],
        INT: [ 'R <intt -> INT>' ]
      },
      next: {}
    },
    '23': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> SUB intt . intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '36' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 36, LABEL: 17, INT: 22 }
    },
    '24': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> MUL intt . intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '37' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 37, LABEL: 17, INT: 22 }
    },
    '25': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> MOV intt . intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '38' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 38, LABEL: 17, INT: 22 }
    },
    '26': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> LOD intt . intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '39' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 39, LABEL: 17, INT: 22 }
    },
    '27': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> STR intt . intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '40' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 40, LABEL: 17, INT: 22 }
    },
    '28': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> JMP intt . intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '41' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 41, LABEL: 17, INT: 22 }
    },
    '29': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> BEQ intt . intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '42' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 42, LABEL: 17, INT: 22 }
    },
    '30': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'inst -> BLT intt . intt intt',
        'label ->  . LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '43' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 43, LABEL: 17, INT: 22 }
    },
    '31': {
      items: [ 'inst -> RDN intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> RDN intt>' ],
        ADD: [ 'R <inst -> RDN intt>' ],
        SUB: [ 'R <inst -> RDN intt>' ],
        MUL: [ 'R <inst -> RDN intt>' ],
        MOV: [ 'R <inst -> RDN intt>' ],
        LOD: [ 'R <inst -> RDN intt>' ],
        STR: [ 'R <inst -> RDN intt>' ],
        JMP: [ 'R <inst -> RDN intt>' ],
        BEQ: [ 'R <inst -> RDN intt>' ],
        BLT: [ 'R <inst -> RDN intt>' ],
        RDN: [ 'R <inst -> RDN intt>' ],
        PTN: [ 'R <inst -> RDN intt>' ],
        HLT: [ 'R <inst -> RDN intt>' ],
        LABEL: [ 'R <inst -> RDN intt>' ]
      },
      next: {}
    },
    '32': {
      items: [ 'inst -> PTN intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> PTN intt>' ],
        ADD: [ 'R <inst -> PTN intt>' ],
        SUB: [ 'R <inst -> PTN intt>' ],
        MUL: [ 'R <inst -> PTN intt>' ],
        MOV: [ 'R <inst -> PTN intt>' ],
        LOD: [ 'R <inst -> PTN intt>' ],
        STR: [ 'R <inst -> PTN intt>' ],
        JMP: [ 'R <inst -> PTN intt>' ],
        BEQ: [ 'R <inst -> PTN intt>' ],
        BLT: [ 'R <inst -> PTN intt>' ],
        RDN: [ 'R <inst -> PTN intt>' ],
        PTN: [ 'R <inst -> PTN intt>' ],
        HLT: [ 'R <inst -> PTN intt>' ],
        LABEL: [ 'R <inst -> PTN intt>' ]
      },
      next: {}
    },
    '33': {
      items: [ 'inst -> HLT intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> HLT intt>' ],
        ADD: [ 'R <inst -> HLT intt>' ],
        SUB: [ 'R <inst -> HLT intt>' ],
        MUL: [ 'R <inst -> HLT intt>' ],
        MOV: [ 'R <inst -> HLT intt>' ],
        LOD: [ 'R <inst -> HLT intt>' ],
        STR: [ 'R <inst -> HLT intt>' ],
        JMP: [ 'R <inst -> HLT intt>' ],
        BEQ: [ 'R <inst -> HLT intt>' ],
        BLT: [ 'R <inst -> HLT intt>' ],
        RDN: [ 'R <inst -> HLT intt>' ],
        PTN: [ 'R <inst -> HLT intt>' ],
        HLT: [ 'R <inst -> HLT intt>' ],
        LABEL: [ 'R <inst -> HLT intt>' ]
      },
      next: {}
    },
    '34': {
      items: [
        'inst ->  . LOD intt intt intt',
        'inst ->  . STR intt intt intt',
        'inst ->  . JMP intt intt intt',
        'inst ->  . BEQ intt intt intt',
        'inst ->  . BLT intt intt intt',
        'inst ->  . RDN intt',
        'inst ->  . PTN intt',
        'inst ->  . HLT intt',
        'instlist ->  . label COLON inst instlist',
        'instlist ->  . inst instlist',
        'instlist ->  . ',
        'label ->  . LABEL',
        'instlist -> label COLON inst . instlist',
        'inst ->  . ADD intt intt intt',
        'inst ->  . SUB intt intt intt',
        'inst ->  . MUL intt intt intt',
        'inst ->  . MOV intt intt'
      ],
      actions: {
        '<EOF>': [ 'R <instlist -> >' ],
        instlist: [ '44' ],
        label: [ '3' ],
        inst: [ '4' ],
        ADD: [ 'S5' ],
        SUB: [ 'S6' ],
        MUL: [ 'S7' ],
        MOV: [ 'S8' ],
        LOD: [ 'S9' ],
        STR: [ 'S10' ],
        JMP: [ 'S11' ],
        BEQ: [ 'S12' ],
        BLT: [ 'S13' ],
        RDN: [ 'S14' ],
        PTN: [ 'S15' ],
        HLT: [ 'S16' ],
        LABEL: [ 'S17' ]
      },
      next: {
        instlist: 44,
        label: 3,
        inst: 4,
        ADD: 5,
        SUB: 6,
        MUL: 7,
        MOV: 8,
        LOD: 9,
        STR: 10,
        JMP: 11,
        BEQ: 12,
        BLT: 13,
        RDN: 14,
        PTN: 15,
        HLT: 16,
        LABEL: 17
      }
    },
    '35': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'label ->  . LABEL',
        'inst -> ADD intt intt . intt'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '45' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 45, LABEL: 17, INT: 22 }
    },
    '36': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'label ->  . LABEL',
        'inst -> SUB intt intt . intt'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '46' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 46, LABEL: 17, INT: 22 }
    },
    '37': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'label ->  . LABEL',
        'inst -> MUL intt intt . intt'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '47' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 47, LABEL: 17, INT: 22 }
    },
    '38': {
      items: [ 'inst -> MOV intt intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> MOV intt intt>' ],
        ADD: [ 'R <inst -> MOV intt intt>' ],
        SUB: [ 'R <inst -> MOV intt intt>' ],
        MUL: [ 'R <inst -> MOV intt intt>' ],
        MOV: [ 'R <inst -> MOV intt intt>' ],
        LOD: [ 'R <inst -> MOV intt intt>' ],
        STR: [ 'R <inst -> MOV intt intt>' ],
        JMP: [ 'R <inst -> MOV intt intt>' ],
        BEQ: [ 'R <inst -> MOV intt intt>' ],
        BLT: [ 'R <inst -> MOV intt intt>' ],
        RDN: [ 'R <inst -> MOV intt intt>' ],
        PTN: [ 'R <inst -> MOV intt intt>' ],
        HLT: [ 'R <inst -> MOV intt intt>' ],
        LABEL: [ 'R <inst -> MOV intt intt>' ]
      },
      next: {}
    },
    '39': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'label ->  . LABEL',
        'inst -> LOD intt intt . intt'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '48' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 48, LABEL: 17, INT: 22 }
    },
    '40': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'label ->  . LABEL',
        'inst -> STR intt intt . intt'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '49' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 49, LABEL: 17, INT: 22 }
    },
    '41': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'label ->  . LABEL',
        'inst -> JMP intt intt . intt'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '50' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 50, LABEL: 17, INT: 22 }
    },
    '42': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'label ->  . LABEL',
        'inst -> BEQ intt intt . intt'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '51' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 51, LABEL: 17, INT: 22 }
    },
    '43': {
      items: [
        'intt ->  . INT',
        'intt ->  . label',
        'label ->  . LABEL',
        'inst -> BLT intt intt . intt'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '52' ],
        LABEL: [ 'S17' ],
        INT: [ 'S22' ]
      },
      next: { label: 20, intt: 52, LABEL: 17, INT: 22 }
    },
    '44': {
      items: [ 'instlist -> label COLON inst instlist . ' ],
      actions: { '<EOF>': [ 'R <instlist -> label COLON inst instlist>' ] },
      next: {}
    },
    '45': {
      items: [ 'inst -> ADD intt intt intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> ADD intt intt intt>' ],
        ADD: [ 'R <inst -> ADD intt intt intt>' ],
        SUB: [ 'R <inst -> ADD intt intt intt>' ],
        MUL: [ 'R <inst -> ADD intt intt intt>' ],
        MOV: [ 'R <inst -> ADD intt intt intt>' ],
        LOD: [ 'R <inst -> ADD intt intt intt>' ],
        STR: [ 'R <inst -> ADD intt intt intt>' ],
        JMP: [ 'R <inst -> ADD intt intt intt>' ],
        BEQ: [ 'R <inst -> ADD intt intt intt>' ],
        BLT: [ 'R <inst -> ADD intt intt intt>' ],
        RDN: [ 'R <inst -> ADD intt intt intt>' ],
        PTN: [ 'R <inst -> ADD intt intt intt>' ],
        HLT: [ 'R <inst -> ADD intt intt intt>' ],
        LABEL: [ 'R <inst -> ADD intt intt intt>' ]
      },
      next: {}
    },
    '46': {
      items: [ 'inst -> SUB intt intt intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> SUB intt intt intt>' ],
        ADD: [ 'R <inst -> SUB intt intt intt>' ],
        SUB: [ 'R <inst -> SUB intt intt intt>' ],
        MUL: [ 'R <inst -> SUB intt intt intt>' ],
        MOV: [ 'R <inst -> SUB intt intt intt>' ],
        LOD: [ 'R <inst -> SUB intt intt intt>' ],
        STR: [ 'R <inst -> SUB intt intt intt>' ],
        JMP: [ 'R <inst -> SUB intt intt intt>' ],
        BEQ: [ 'R <inst -> SUB intt intt intt>' ],
        BLT: [ 'R <inst -> SUB intt intt intt>' ],
        RDN: [ 'R <inst -> SUB intt intt intt>' ],
        PTN: [ 'R <inst -> SUB intt intt intt>' ],
        HLT: [ 'R <inst -> SUB intt intt intt>' ],
        LABEL: [ 'R <inst -> SUB intt intt intt>' ]
      },
      next: {}
    },
    '47': {
      items: [ 'inst -> MUL intt intt intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> MUL intt intt intt>' ],
        ADD: [ 'R <inst -> MUL intt intt intt>' ],
        SUB: [ 'R <inst -> MUL intt intt intt>' ],
        MUL: [ 'R <inst -> MUL intt intt intt>' ],
        MOV: [ 'R <inst -> MUL intt intt intt>' ],
        LOD: [ 'R <inst -> MUL intt intt intt>' ],
        STR: [ 'R <inst -> MUL intt intt intt>' ],
        JMP: [ 'R <inst -> MUL intt intt intt>' ],
        BEQ: [ 'R <inst -> MUL intt intt intt>' ],
        BLT: [ 'R <inst -> MUL intt intt intt>' ],
        RDN: [ 'R <inst -> MUL intt intt intt>' ],
        PTN: [ 'R <inst -> MUL intt intt intt>' ],
        HLT: [ 'R <inst -> MUL intt intt intt>' ],
        LABEL: [ 'R <inst -> MUL intt intt intt>' ]
      },
      next: {}
    },
    '48': {
      items: [ 'inst -> LOD intt intt intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> LOD intt intt intt>' ],
        ADD: [ 'R <inst -> LOD intt intt intt>' ],
        SUB: [ 'R <inst -> LOD intt intt intt>' ],
        MUL: [ 'R <inst -> LOD intt intt intt>' ],
        MOV: [ 'R <inst -> LOD intt intt intt>' ],
        LOD: [ 'R <inst -> LOD intt intt intt>' ],
        STR: [ 'R <inst -> LOD intt intt intt>' ],
        JMP: [ 'R <inst -> LOD intt intt intt>' ],
        BEQ: [ 'R <inst -> LOD intt intt intt>' ],
        BLT: [ 'R <inst -> LOD intt intt intt>' ],
        RDN: [ 'R <inst -> LOD intt intt intt>' ],
        PTN: [ 'R <inst -> LOD intt intt intt>' ],
        HLT: [ 'R <inst -> LOD intt intt intt>' ],
        LABEL: [ 'R <inst -> LOD intt intt intt>' ]
      },
      next: {}
    },
    '49': {
      items: [ 'inst -> STR intt intt intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> STR intt intt intt>' ],
        ADD: [ 'R <inst -> STR intt intt intt>' ],
        SUB: [ 'R <inst -> STR intt intt intt>' ],
        MUL: [ 'R <inst -> STR intt intt intt>' ],
        MOV: [ 'R <inst -> STR intt intt intt>' ],
        LOD: [ 'R <inst -> STR intt intt intt>' ],
        STR: [ 'R <inst -> STR intt intt intt>' ],
        JMP: [ 'R <inst -> STR intt intt intt>' ],
        BEQ: [ 'R <inst -> STR intt intt intt>' ],
        BLT: [ 'R <inst -> STR intt intt intt>' ],
        RDN: [ 'R <inst -> STR intt intt intt>' ],
        PTN: [ 'R <inst -> STR intt intt intt>' ],
        HLT: [ 'R <inst -> STR intt intt intt>' ],
        LABEL: [ 'R <inst -> STR intt intt intt>' ]
      },
      next: {}
    },
    '50': {
      items: [ 'inst -> JMP intt intt intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> JMP intt intt intt>' ],
        ADD: [ 'R <inst -> JMP intt intt intt>' ],
        SUB: [ 'R <inst -> JMP intt intt intt>' ],
        MUL: [ 'R <inst -> JMP intt intt intt>' ],
        MOV: [ 'R <inst -> JMP intt intt intt>' ],
        LOD: [ 'R <inst -> JMP intt intt intt>' ],
        STR: [ 'R <inst -> JMP intt intt intt>' ],
        JMP: [ 'R <inst -> JMP intt intt intt>' ],
        BEQ: [ 'R <inst -> JMP intt intt intt>' ],
        BLT: [ 'R <inst -> JMP intt intt intt>' ],
        RDN: [ 'R <inst -> JMP intt intt intt>' ],
        PTN: [ 'R <inst -> JMP intt intt intt>' ],
        HLT: [ 'R <inst -> JMP intt intt intt>' ],
        LABEL: [ 'R <inst -> JMP intt intt intt>' ]
      },
      next: {}
    },
    '51': {
      items: [ 'inst -> BEQ intt intt intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> BEQ intt intt intt>' ],
        ADD: [ 'R <inst -> BEQ intt intt intt>' ],
        SUB: [ 'R <inst -> BEQ intt intt intt>' ],
        MUL: [ 'R <inst -> BEQ intt intt intt>' ],
        MOV: [ 'R <inst -> BEQ intt intt intt>' ],
        LOD: [ 'R <inst -> BEQ intt intt intt>' ],
        STR: [ 'R <inst -> BEQ intt intt intt>' ],
        JMP: [ 'R <inst -> BEQ intt intt intt>' ],
        BEQ: [ 'R <inst -> BEQ intt intt intt>' ],
        BLT: [ 'R <inst -> BEQ intt intt intt>' ],
        RDN: [ 'R <inst -> BEQ intt intt intt>' ],
        PTN: [ 'R <inst -> BEQ intt intt intt>' ],
        HLT: [ 'R <inst -> BEQ intt intt intt>' ],
        LABEL: [ 'R <inst -> BEQ intt intt intt>' ]
      },
      next: {}
    },
    '52': {
      items: [ 'inst -> BLT intt intt intt . ' ],
      actions: {
        '<EOF>': [ 'R <inst -> BLT intt intt intt>' ],
        ADD: [ 'R <inst -> BLT intt intt intt>' ],
        SUB: [ 'R <inst -> BLT intt intt intt>' ],
        MUL: [ 'R <inst -> BLT intt intt intt>' ],
        MOV: [ 'R <inst -> BLT intt intt intt>' ],
        LOD: [ 'R <inst -> BLT intt intt intt>' ],
        STR: [ 'R <inst -> BLT intt intt intt>' ],
        JMP: [ 'R <inst -> BLT intt intt intt>' ],
        BEQ: [ 'R <inst -> BLT intt intt intt>' ],
        BLT: [ 'R <inst -> BLT intt intt intt>' ],
        RDN: [ 'R <inst -> BLT intt intt intt>' ],
        PTN: [ 'R <inst -> BLT intt intt intt>' ],
        HLT: [ 'R <inst -> BLT intt intt intt>' ],
        LABEL: [ 'R <inst -> BLT intt intt intt>' ]
      },
      next: {}
    }
  },
  "lr1": {
    '0': {
      items: [
        'Start ->  . pgm   /   <EOF>',
        'pgm ->  . instlist   /   <EOF>',
        'inst ->  . LOD intt intt intt   /   LABEL',
        'inst ->  . PTN intt   /   JMP',
        'inst ->  . HLT intt   /   JMP',
        'inst ->  . ADD intt intt intt   /   BEQ',
        'inst ->  . SUB intt intt intt   /   BEQ',
        'inst ->  . MUL intt intt intt   /   BEQ',
        'inst ->  . MOV intt intt   /   BEQ',
        'inst ->  . LOD intt intt intt   /   BEQ',
        'inst ->  . STR intt intt intt   /   BEQ',
        'inst ->  . JMP intt intt intt   /   BEQ',
        'inst ->  . BEQ intt intt intt   /   BEQ',
        'inst ->  . STR intt intt intt   /   LABEL',
        'inst ->  . BLT intt intt intt   /   BEQ',
        'inst ->  . RDN intt   /   BEQ',
        'inst ->  . PTN intt   /   BEQ',
        'inst ->  . HLT intt   /   BEQ',
        'inst ->  . ADD intt intt intt   /   BLT',
        'inst ->  . SUB intt intt intt   /   BLT',
        'inst ->  . MUL intt intt intt   /   BLT',
        'inst ->  . MOV intt intt   /   BLT',
        'inst ->  . LOD intt intt intt   /   BLT',
        'inst ->  . STR intt intt intt   /   BLT',
        'inst ->  . JMP intt intt intt   /   LABEL',
        'inst ->  . JMP intt intt intt   /   BLT',
        'inst ->  . BEQ intt intt intt   /   BLT',
        'inst ->  . BLT intt intt intt   /   BLT',
        'inst ->  . RDN intt   /   BLT',
        'inst ->  . PTN intt   /   BLT',
        'inst ->  . HLT intt   /   BLT',
        'inst ->  . ADD intt intt intt   /   RDN',
        'inst ->  . SUB intt intt intt   /   RDN',
        'inst ->  . MUL intt intt intt   /   RDN',
        'inst ->  . MOV intt intt   /   RDN',
        'inst ->  . BEQ intt intt intt   /   LABEL',
        'inst ->  . LOD intt intt intt   /   RDN',
        'inst ->  . STR intt intt intt   /   RDN',
        'inst ->  . JMP intt intt intt   /   RDN',
        'inst ->  . BEQ intt intt intt   /   RDN',
        'inst ->  . BLT intt intt intt   /   RDN',
        'inst ->  . RDN intt   /   RDN',
        'inst ->  . PTN intt   /   RDN',
        'inst ->  . HLT intt   /   RDN',
        'inst ->  . ADD intt intt intt   /   PTN',
        'inst ->  . SUB intt intt intt   /   PTN',
        'inst ->  . BLT intt intt intt   /   LABEL',
        'inst ->  . MUL intt intt intt   /   PTN',
        'inst ->  . MOV intt intt   /   PTN',
        'inst ->  . LOD intt intt intt   /   PTN',
        'inst ->  . STR intt intt intt   /   PTN',
        'inst ->  . JMP intt intt intt   /   PTN',
        'inst ->  . BEQ intt intt intt   /   PTN',
        'inst ->  . BLT intt intt intt   /   PTN',
        'inst ->  . RDN intt   /   PTN',
        'inst ->  . PTN intt   /   PTN',
        'inst ->  . HLT intt   /   PTN',
        'inst ->  . RDN intt   /   LABEL',
        'inst ->  . ADD intt intt intt   /   HLT',
        'inst ->  . SUB intt intt intt   /   HLT',
        'inst ->  . MUL intt intt intt   /   HLT',
        'inst ->  . MOV intt intt   /   HLT',
        'inst ->  . LOD intt intt intt   /   HLT',
        'inst ->  . STR intt intt intt   /   HLT',
        'inst ->  . JMP intt intt intt   /   HLT',
        'inst ->  . BEQ intt intt intt   /   HLT',
        'inst ->  . BLT intt intt intt   /   HLT',
        'inst ->  . RDN intt   /   HLT',
        'inst ->  . PTN intt   /   LABEL',
        'inst ->  . PTN intt   /   HLT',
        'inst ->  . HLT intt   /   HLT',
        'inst ->  . ADD intt intt intt   /   <EOF>',
        'inst ->  . SUB intt intt intt   /   <EOF>',
        'inst ->  . MUL intt intt intt   /   <EOF>',
        'inst ->  . MOV intt intt   /   <EOF>',
        'inst ->  . LOD intt intt intt   /   <EOF>',
        'inst ->  . STR intt intt intt   /   <EOF>',
        'inst ->  . JMP intt intt intt   /   <EOF>',
        'inst ->  . BEQ intt intt intt   /   <EOF>',
        'inst ->  . HLT intt   /   LABEL',
        'inst ->  . BLT intt intt intt   /   <EOF>',
        'inst ->  . RDN intt   /   <EOF>',
        'inst ->  . PTN intt   /   <EOF>',
        'inst ->  . HLT intt   /   <EOF>',
        'inst ->  . ADD intt intt intt   /   ADD',
        'inst ->  . SUB intt intt intt   /   ADD',
        'instlist ->  . label COLON inst instlist   /   <EOF>',
        'inst ->  . MUL intt intt intt   /   ADD',
        'inst ->  . MOV intt intt   /   ADD',
        'inst ->  . LOD intt intt intt   /   ADD',
        'inst ->  . STR intt intt intt   /   ADD',
        'inst ->  . JMP intt intt intt   /   ADD',
        'inst ->  . BEQ intt intt intt   /   ADD',
        'inst ->  . BLT intt intt intt   /   ADD',
        'inst ->  . RDN intt   /   ADD',
        'inst ->  . PTN intt   /   ADD',
        'inst ->  . HLT intt   /   ADD',
        'instlist ->  . inst instlist   /   <EOF>',
        'inst ->  . ADD intt intt intt   /   SUB',
        'inst ->  . SUB intt intt intt   /   SUB',
        'inst ->  . MUL intt intt intt   /   SUB',
        'inst ->  . MOV intt intt   /   SUB',
        'inst ->  . LOD intt intt intt   /   SUB',
        'inst ->  . STR intt intt intt   /   SUB',
        'inst ->  . JMP intt intt intt   /   SUB',
        'inst ->  . BEQ intt intt intt   /   SUB',
        'inst ->  . BLT intt intt intt   /   SUB',
        'inst ->  . RDN intt   /   SUB',
        'instlist ->  .    /   <EOF>',
        'inst ->  . PTN intt   /   SUB',
        'inst ->  . HLT intt   /   SUB',
        'inst ->  . ADD intt intt intt   /   MUL',
        'inst ->  . SUB intt intt intt   /   MUL',
        'inst ->  . MUL intt intt intt   /   MUL',
        'inst ->  . MOV intt intt   /   MUL',
        'inst ->  . LOD intt intt intt   /   MUL',
        'inst ->  . STR intt intt intt   /   MUL',
        'inst ->  . JMP intt intt intt   /   MUL',
        'inst ->  . BEQ intt intt intt   /   MUL',
        'label ->  . LABEL   /   COLON',
        'inst ->  . BLT intt intt intt   /   MUL',
        'inst ->  . RDN intt   /   MUL',
        'inst ->  . PTN intt   /   MUL',
        'inst ->  . HLT intt   /   MUL',
        'inst ->  . ADD intt intt intt   /   MOV',
        'inst ->  . SUB intt intt intt   /   MOV',
        'inst ->  . MUL intt intt intt   /   MOV',
        'inst ->  . MOV intt intt   /   MOV',
        'inst ->  . LOD intt intt intt   /   MOV',
        'inst ->  . STR intt intt intt   /   MOV',
        'inst ->  . ADD intt intt intt   /   LABEL',
        'inst ->  . JMP intt intt intt   /   MOV',
        'inst ->  . BEQ intt intt intt   /   MOV',
        'inst ->  . BLT intt intt intt   /   MOV',
        'inst ->  . RDN intt   /   MOV',
        'inst ->  . PTN intt   /   MOV',
        'inst ->  . HLT intt   /   MOV',
        'inst ->  . ADD intt intt intt   /   LOD',
        'inst ->  . SUB intt intt intt   /   LOD',
        'inst ->  . MUL intt intt intt   /   LOD',
        'inst ->  . MOV intt intt   /   LOD',
        'inst ->  . SUB intt intt intt   /   LABEL',
        'inst ->  . LOD intt intt intt   /   LOD',
        'inst ->  . STR intt intt intt   /   LOD',
        'inst ->  . JMP intt intt intt   /   LOD',
        'inst ->  . BEQ intt intt intt   /   LOD',
        'inst ->  . BLT intt intt intt   /   LOD',
        'inst ->  . RDN intt   /   LOD',
        'inst ->  . PTN intt   /   LOD',
        'inst ->  . HLT intt   /   LOD',
        'inst ->  . ADD intt intt intt   /   STR',
        'inst ->  . SUB intt intt intt   /   STR',
        'inst ->  . MUL intt intt intt   /   LABEL',
        'inst ->  . MUL intt intt intt   /   STR',
        'inst ->  . MOV intt intt   /   STR',
        'inst ->  . LOD intt intt intt   /   STR',
        'inst ->  . STR intt intt intt   /   STR',
        'inst ->  . JMP intt intt intt   /   STR',
        'inst ->  . BEQ intt intt intt   /   STR',
        'inst ->  . BLT intt intt intt   /   STR',
        'inst ->  . RDN intt   /   STR',
        'inst ->  . PTN intt   /   STR',
        'inst ->  . HLT intt   /   STR',
        'inst ->  . MOV intt intt   /   LABEL',
        'inst ->  . ADD intt intt intt   /   JMP',
        'inst ->  . SUB intt intt intt   /   JMP',
        'inst ->  . MUL intt intt intt   /   JMP',
        'inst ->  . MOV intt intt   /   JMP',
        'inst ->  . LOD intt intt intt   /   JMP',
        'inst ->  . STR intt intt intt   /   JMP',
        'inst ->  . JMP intt intt intt   /   JMP',
        'inst ->  . BEQ intt intt intt   /   JMP',
        'inst ->  . BLT intt intt intt   /   JMP',
        'inst ->  . RDN intt   /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <instlist -> >' ],
        pgm: [ '1' ],
        instlist: [ '2' ],
        label: [ '3' ],
        inst: [ '4' ],
        ADD: [ 'S5' ],
        SUB: [ 'S6' ],
        MUL: [ 'S7' ],
        MOV: [ 'S8' ],
        LOD: [ 'S9' ],
        STR: [ 'S10' ],
        JMP: [ 'S11' ],
        BEQ: [ 'S12' ],
        BLT: [ 'S13' ],
        RDN: [ 'S14' ],
        PTN: [ 'S15' ],
        HLT: [ 'S16' ],
        LABEL: [ 'S17' ]
      },
      next: {
        pgm: 1,
        instlist: 2,
        label: 3,
        inst: 4,
        ADD: 5,
        SUB: 6,
        MUL: 7,
        MOV: 8,
        LOD: 9,
        STR: 10,
        JMP: 11,
        BEQ: 12,
        BLT: 13,
        RDN: 14,
        PTN: 15,
        HLT: 16,
        LABEL: 17
      }
    },
    '1': {
      items: [ 'Start -> pgm .    /   <EOF>' ],
      actions: { '<EOF>': [ 'Acc' ] },
      next: {}
    },
    '2': {
      items: [ 'pgm -> instlist .    /   <EOF>' ],
      actions: { '<EOF>': [ 'R <pgm -> instlist>' ] },
      next: {}
    },
    '3': {
      items: [ 'instlist -> label . COLON inst instlist   /   <EOF>' ],
      actions: { COLON: [ 'S18' ] },
      next: { COLON: 18 }
    },
    '4': {
      items: [
        'inst ->  . LOD intt intt intt   /   LABEL',
        'inst ->  . PTN intt   /   JMP',
        'inst ->  . HLT intt   /   JMP',
        'inst ->  . ADD intt intt intt   /   BEQ',
        'inst ->  . SUB intt intt intt   /   BEQ',
        'inst ->  . MUL intt intt intt   /   BEQ',
        'inst ->  . MOV intt intt   /   BEQ',
        'inst ->  . LOD intt intt intt   /   BEQ',
        'inst ->  . STR intt intt intt   /   BEQ',
        'inst ->  . JMP intt intt intt   /   BEQ',
        'inst ->  . BEQ intt intt intt   /   BEQ',
        'inst ->  . STR intt intt intt   /   LABEL',
        'inst ->  . BLT intt intt intt   /   BEQ',
        'inst ->  . RDN intt   /   BEQ',
        'inst ->  . PTN intt   /   BEQ',
        'inst ->  . HLT intt   /   BEQ',
        'inst ->  . ADD intt intt intt   /   BLT',
        'inst ->  . SUB intt intt intt   /   BLT',
        'inst ->  . MUL intt intt intt   /   BLT',
        'inst ->  . MOV intt intt   /   BLT',
        'inst ->  . LOD intt intt intt   /   BLT',
        'inst ->  . STR intt intt intt   /   BLT',
        'inst ->  . JMP intt intt intt   /   LABEL',
        'inst ->  . JMP intt intt intt   /   BLT',
        'inst ->  . BEQ intt intt intt   /   BLT',
        'inst ->  . BLT intt intt intt   /   BLT',
        'inst ->  . RDN intt   /   BLT',
        'inst ->  . PTN intt   /   BLT',
        'inst ->  . HLT intt   /   BLT',
        'inst ->  . ADD intt intt intt   /   RDN',
        'inst ->  . SUB intt intt intt   /   RDN',
        'inst ->  . MUL intt intt intt   /   RDN',
        'inst ->  . MOV intt intt   /   RDN',
        'inst ->  . BEQ intt intt intt   /   LABEL',
        'inst ->  . LOD intt intt intt   /   RDN',
        'inst ->  . STR intt intt intt   /   RDN',
        'inst ->  . JMP intt intt intt   /   RDN',
        'inst ->  . BEQ intt intt intt   /   RDN',
        'inst ->  . BLT intt intt intt   /   RDN',
        'inst ->  . RDN intt   /   RDN',
        'inst ->  . PTN intt   /   RDN',
        'inst ->  . HLT intt   /   RDN',
        'inst ->  . ADD intt intt intt   /   PTN',
        'inst ->  . SUB intt intt intt   /   PTN',
        'inst ->  . BLT intt intt intt   /   LABEL',
        'inst ->  . MUL intt intt intt   /   PTN',
        'inst ->  . MOV intt intt   /   PTN',
        'inst ->  . LOD intt intt intt   /   PTN',
        'inst ->  . STR intt intt intt   /   PTN',
        'inst ->  . JMP intt intt intt   /   PTN',
        'inst ->  . BEQ intt intt intt   /   PTN',
        'inst ->  . BLT intt intt intt   /   PTN',
        'inst ->  . RDN intt   /   PTN',
        'inst ->  . PTN intt   /   PTN',
        'inst ->  . HLT intt   /   PTN',
        'inst ->  . RDN intt   /   LABEL',
        'inst ->  . ADD intt intt intt   /   HLT',
        'inst ->  . SUB intt intt intt   /   HLT',
        'inst ->  . MUL intt intt intt   /   HLT',
        'inst ->  . MOV intt intt   /   HLT',
        'inst ->  . LOD intt intt intt   /   HLT',
        'inst ->  . STR intt intt intt   /   HLT',
        'inst ->  . JMP intt intt intt   /   HLT',
        'inst ->  . BEQ intt intt intt   /   HLT',
        'inst ->  . BLT intt intt intt   /   HLT',
        'inst ->  . RDN intt   /   HLT',
        'inst ->  . PTN intt   /   LABEL',
        'inst ->  . PTN intt   /   HLT',
        'inst ->  . HLT intt   /   HLT',
        'inst ->  . ADD intt intt intt   /   <EOF>',
        'inst ->  . SUB intt intt intt   /   <EOF>',
        'inst ->  . MUL intt intt intt   /   <EOF>',
        'inst ->  . MOV intt intt   /   <EOF>',
        'inst ->  . LOD intt intt intt   /   <EOF>',
        'inst ->  . STR intt intt intt   /   <EOF>',
        'inst ->  . JMP intt intt intt   /   <EOF>',
        'inst ->  . BEQ intt intt intt   /   <EOF>',
        'inst ->  . HLT intt   /   LABEL',
        'inst ->  . BLT intt intt intt   /   <EOF>',
        'inst ->  . RDN intt   /   <EOF>',
        'inst ->  . PTN intt   /   <EOF>',
        'inst ->  . HLT intt   /   <EOF>',
        'instlist -> inst . instlist   /   <EOF>',
        'inst ->  . ADD intt intt intt   /   ADD',
        'inst ->  . SUB intt intt intt   /   ADD',
        'instlist ->  . label COLON inst instlist   /   <EOF>',
        'inst ->  . MUL intt intt intt   /   ADD',
        'inst ->  . MOV intt intt   /   ADD',
        'inst ->  . LOD intt intt intt   /   ADD',
        'inst ->  . STR intt intt intt   /   ADD',
        'inst ->  . JMP intt intt intt   /   ADD',
        'inst ->  . BEQ intt intt intt   /   ADD',
        'inst ->  . BLT intt intt intt   /   ADD',
        'inst ->  . RDN intt   /   ADD',
        'inst ->  . PTN intt   /   ADD',
        'inst ->  . HLT intt   /   ADD',
        'instlist ->  . inst instlist   /   <EOF>',
        'inst ->  . ADD intt intt intt   /   SUB',
        'inst ->  . SUB intt intt intt   /   SUB',
        'inst ->  . MUL intt intt intt   /   SUB',
        'inst ->  . MOV intt intt   /   SUB',
        'inst ->  . LOD intt intt intt   /   SUB',
        'inst ->  . STR intt intt intt   /   SUB',
        'inst ->  . JMP intt intt intt   /   SUB',
        'inst ->  . BEQ intt intt intt   /   SUB',
        'inst ->  . BLT intt intt intt   /   SUB',
        'inst ->  . RDN intt   /   SUB',
        'instlist ->  .    /   <EOF>',
        'inst ->  . PTN intt   /   SUB',
        'inst ->  . HLT intt   /   SUB',
        'inst ->  . ADD intt intt intt   /   MUL',
        'inst ->  . SUB intt intt intt   /   MUL',
        'inst ->  . MUL intt intt intt   /   MUL',
        'inst ->  . MOV intt intt   /   MUL',
        'inst ->  . LOD intt intt intt   /   MUL',
        'inst ->  . STR intt intt intt   /   MUL',
        'inst ->  . JMP intt intt intt   /   MUL',
        'inst ->  . BEQ intt intt intt   /   MUL',
        'label ->  . LABEL   /   COLON',
        'inst ->  . BLT intt intt intt   /   MUL',
        'inst ->  . RDN intt   /   MUL',
        'inst ->  . PTN intt   /   MUL',
        'inst ->  . HLT intt   /   MUL',
        'inst ->  . ADD intt intt intt   /   MOV',
        'inst ->  . SUB intt intt intt   /   MOV',
        'inst ->  . MUL intt intt intt   /   MOV',
        'inst ->  . MOV intt intt   /   MOV',
        'inst ->  . LOD intt intt intt   /   MOV',
        'inst ->  . STR intt intt intt   /   MOV',
        'inst ->  . ADD intt intt intt   /   LABEL',
        'inst ->  . JMP intt intt intt   /   MOV',
        'inst ->  . BEQ intt intt intt   /   MOV',
        'inst ->  . BLT intt intt intt   /   MOV',
        'inst ->  . RDN intt   /   MOV',
        'inst ->  . PTN intt   /   MOV',
        'inst ->  . HLT intt   /   MOV',
        'inst ->  . ADD intt intt intt   /   LOD',
        'inst ->  . SUB intt intt intt   /   LOD',
        'inst ->  . MUL intt intt intt   /   LOD',
        'inst ->  . MOV intt intt   /   LOD',
        'inst ->  . SUB intt intt intt   /   LABEL',
        'inst ->  . LOD intt intt intt   /   LOD',
        'inst ->  . STR intt intt intt   /   LOD',
        'inst ->  . JMP intt intt intt   /   LOD',
        'inst ->  . BEQ intt intt intt   /   LOD',
        'inst ->  . BLT intt intt intt   /   LOD',
        'inst ->  . RDN intt   /   LOD',
        'inst ->  . PTN intt   /   LOD',
        'inst ->  . HLT intt   /   LOD',
        'inst ->  . ADD intt intt intt   /   STR',
        'inst ->  . SUB intt intt intt   /   STR',
        'inst ->  . MUL intt intt intt   /   LABEL',
        'inst ->  . MUL intt intt intt   /   STR',
        'inst ->  . MOV intt intt   /   STR',
        'inst ->  . LOD intt intt intt   /   STR',
        'inst ->  . STR intt intt intt   /   STR',
        'inst ->  . JMP intt intt intt   /   STR',
        'inst ->  . BEQ intt intt intt   /   STR',
        'inst ->  . BLT intt intt intt   /   STR',
        'inst ->  . RDN intt   /   STR',
        'inst ->  . PTN intt   /   STR',
        'inst ->  . HLT intt   /   STR',
        'inst ->  . MOV intt intt   /   LABEL',
        'inst ->  . ADD intt intt intt   /   JMP',
        'inst ->  . SUB intt intt intt   /   JMP',
        'inst ->  . MUL intt intt intt   /   JMP',
        'inst ->  . MOV intt intt   /   JMP',
        'inst ->  . LOD intt intt intt   /   JMP',
        'inst ->  . STR intt intt intt   /   JMP',
        'inst ->  . JMP intt intt intt   /   JMP',
        'inst ->  . BEQ intt intt intt   /   JMP',
        'inst ->  . BLT intt intt intt   /   JMP',
        'inst ->  . RDN intt   /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <instlist -> >' ],
        instlist: [ '19' ],
        label: [ '3' ],
        inst: [ '4' ],
        ADD: [ 'S5' ],
        SUB: [ 'S6' ],
        MUL: [ 'S7' ],
        MOV: [ 'S8' ],
        LOD: [ 'S9' ],
        STR: [ 'S10' ],
        JMP: [ 'S11' ],
        BEQ: [ 'S12' ],
        BLT: [ 'S13' ],
        RDN: [ 'S14' ],
        PTN: [ 'S15' ],
        HLT: [ 'S16' ],
        LABEL: [ 'S17' ]
      },
      next: {
        instlist: 19,
        label: 3,
        inst: 4,
        ADD: 5,
        SUB: 6,
        MUL: 7,
        MOV: 8,
        LOD: 9,
        STR: 10,
        JMP: 11,
        BEQ: 12,
        BLT: 13,
        RDN: 14,
        PTN: 15,
        HLT: 16,
        LABEL: 17
      }
    },
    '5': {
      items: [
        'inst -> ADD . intt intt intt   /   BEQ',
        'inst -> ADD . intt intt intt   /   BLT',
        'inst -> ADD . intt intt intt   /   RDN',
        'inst -> ADD . intt intt intt   /   PTN',
        'inst -> ADD . intt intt intt   /   HLT',
        'inst -> ADD . intt intt intt   /   <EOF>',
        'inst -> ADD . intt intt intt   /   ADD',
        'inst -> ADD . intt intt intt   /   SUB',
        'inst -> ADD . intt intt intt   /   MUL',
        'inst -> ADD . intt intt intt   /   MOV',
        'inst -> ADD . intt intt intt   /   LABEL',
        'inst -> ADD . intt intt intt   /   LOD',
        'inst -> ADD . intt intt intt   /   STR',
        'inst -> ADD . intt intt intt   /   JMP',
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '21' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 21, LABEL: 22, INT: 23 }
    },
    '6': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> SUB . intt intt intt   /   BEQ',
        'inst -> SUB . intt intt intt   /   BLT',
        'inst -> SUB . intt intt intt   /   RDN',
        'inst -> SUB . intt intt intt   /   PTN',
        'inst -> SUB . intt intt intt   /   HLT',
        'inst -> SUB . intt intt intt   /   <EOF>',
        'inst -> SUB . intt intt intt   /   ADD',
        'inst -> SUB . intt intt intt   /   SUB',
        'inst -> SUB . intt intt intt   /   MUL',
        'inst -> SUB . intt intt intt   /   MOV',
        'inst -> SUB . intt intt intt   /   LOD',
        'inst -> SUB . intt intt intt   /   LABEL',
        'inst -> SUB . intt intt intt   /   STR',
        'inst -> SUB . intt intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '24' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 24, LABEL: 22, INT: 23 }
    },
    '7': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> MUL . intt intt intt   /   BEQ',
        'inst -> MUL . intt intt intt   /   BLT',
        'inst -> MUL . intt intt intt   /   RDN',
        'inst -> MUL . intt intt intt   /   PTN',
        'inst -> MUL . intt intt intt   /   HLT',
        'inst -> MUL . intt intt intt   /   <EOF>',
        'inst -> MUL . intt intt intt   /   ADD',
        'inst -> MUL . intt intt intt   /   SUB',
        'inst -> MUL . intt intt intt   /   MUL',
        'inst -> MUL . intt intt intt   /   MOV',
        'inst -> MUL . intt intt intt   /   LOD',
        'inst -> MUL . intt intt intt   /   LABEL',
        'inst -> MUL . intt intt intt   /   STR',
        'inst -> MUL . intt intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '25' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 25, LABEL: 22, INT: 23 }
    },
    '8': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> MOV . intt intt   /   BEQ',
        'inst -> MOV . intt intt   /   BLT',
        'inst -> MOV . intt intt   /   RDN',
        'inst -> MOV . intt intt   /   PTN',
        'inst -> MOV . intt intt   /   HLT',
        'inst -> MOV . intt intt   /   <EOF>',
        'inst -> MOV . intt intt   /   ADD',
        'inst -> MOV . intt intt   /   SUB',
        'inst -> MOV . intt intt   /   MUL',
        'inst -> MOV . intt intt   /   MOV',
        'inst -> MOV . intt intt   /   LOD',
        'inst -> MOV . intt intt   /   STR',
        'inst -> MOV . intt intt   /   LABEL',
        'inst -> MOV . intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '26' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 26, LABEL: 22, INT: 23 }
    },
    '9': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> LOD . intt intt intt   /   LABEL',
        'inst -> LOD . intt intt intt   /   BEQ',
        'inst -> LOD . intt intt intt   /   BLT',
        'inst -> LOD . intt intt intt   /   RDN',
        'inst -> LOD . intt intt intt   /   PTN',
        'inst -> LOD . intt intt intt   /   HLT',
        'inst -> LOD . intt intt intt   /   <EOF>',
        'inst -> LOD . intt intt intt   /   ADD',
        'inst -> LOD . intt intt intt   /   SUB',
        'inst -> LOD . intt intt intt   /   MUL',
        'inst -> LOD . intt intt intt   /   MOV',
        'inst -> LOD . intt intt intt   /   LOD',
        'inst -> LOD . intt intt intt   /   STR',
        'inst -> LOD . intt intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '27' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 27, LABEL: 22, INT: 23 }
    },
    '10': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> STR . intt intt intt   /   BEQ',
        'inst -> STR . intt intt intt   /   LABEL',
        'inst -> STR . intt intt intt   /   BLT',
        'inst -> STR . intt intt intt   /   RDN',
        'inst -> STR . intt intt intt   /   PTN',
        'inst -> STR . intt intt intt   /   HLT',
        'inst -> STR . intt intt intt   /   <EOF>',
        'inst -> STR . intt intt intt   /   ADD',
        'inst -> STR . intt intt intt   /   SUB',
        'inst -> STR . intt intt intt   /   MUL',
        'inst -> STR . intt intt intt   /   MOV',
        'inst -> STR . intt intt intt   /   LOD',
        'inst -> STR . intt intt intt   /   STR',
        'inst -> STR . intt intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '28' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 28, LABEL: 22, INT: 23 }
    },
    '11': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> JMP . intt intt intt   /   BEQ',
        'inst -> JMP . intt intt intt   /   LABEL',
        'inst -> JMP . intt intt intt   /   BLT',
        'inst -> JMP . intt intt intt   /   RDN',
        'inst -> JMP . intt intt intt   /   PTN',
        'inst -> JMP . intt intt intt   /   HLT',
        'inst -> JMP . intt intt intt   /   <EOF>',
        'inst -> JMP . intt intt intt   /   ADD',
        'inst -> JMP . intt intt intt   /   SUB',
        'inst -> JMP . intt intt intt   /   MUL',
        'inst -> JMP . intt intt intt   /   MOV',
        'inst -> JMP . intt intt intt   /   LOD',
        'inst -> JMP . intt intt intt   /   STR',
        'inst -> JMP . intt intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '29' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 29, LABEL: 22, INT: 23 }
    },
    '12': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> BEQ . intt intt intt   /   BEQ',
        'inst -> BEQ . intt intt intt   /   BLT',
        'inst -> BEQ . intt intt intt   /   LABEL',
        'inst -> BEQ . intt intt intt   /   RDN',
        'inst -> BEQ . intt intt intt   /   PTN',
        'inst -> BEQ . intt intt intt   /   HLT',
        'inst -> BEQ . intt intt intt   /   <EOF>',
        'inst -> BEQ . intt intt intt   /   ADD',
        'inst -> BEQ . intt intt intt   /   SUB',
        'inst -> BEQ . intt intt intt   /   MUL',
        'inst -> BEQ . intt intt intt   /   MOV',
        'inst -> BEQ . intt intt intt   /   LOD',
        'inst -> BEQ . intt intt intt   /   STR',
        'inst -> BEQ . intt intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '30' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 30, LABEL: 22, INT: 23 }
    },
    '13': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> BLT . intt intt intt   /   BEQ',
        'inst -> BLT . intt intt intt   /   BLT',
        'inst -> BLT . intt intt intt   /   RDN',
        'inst -> BLT . intt intt intt   /   LABEL',
        'inst -> BLT . intt intt intt   /   PTN',
        'inst -> BLT . intt intt intt   /   HLT',
        'inst -> BLT . intt intt intt   /   <EOF>',
        'inst -> BLT . intt intt intt   /   ADD',
        'inst -> BLT . intt intt intt   /   SUB',
        'inst -> BLT . intt intt intt   /   MUL',
        'inst -> BLT . intt intt intt   /   MOV',
        'inst -> BLT . intt intt intt   /   LOD',
        'inst -> BLT . intt intt intt   /   STR',
        'inst -> BLT . intt intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '31' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 31, LABEL: 22, INT: 23 }
    },
    '14': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'inst -> RDN . intt   /   BEQ',
        'inst -> RDN . intt   /   BLT',
        'inst -> RDN . intt   /   RDN',
        'inst -> RDN . intt   /   PTN',
        'inst -> RDN . intt   /   LABEL',
        'inst -> RDN . intt   /   HLT',
        'inst -> RDN . intt   /   <EOF>',
        'inst -> RDN . intt   /   ADD',
        'inst -> RDN . intt   /   SUB',
        'inst -> RDN . intt   /   MUL',
        'inst -> RDN . intt   /   MOV',
        'inst -> RDN . intt   /   LOD',
        'inst -> RDN . intt   /   STR',
        'inst -> RDN . intt   /   JMP',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '33' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 33, LABEL: 34, INT: 35 }
    },
    '15': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP',
        'inst -> PTN . intt   /   JMP',
        'inst -> PTN . intt   /   BEQ',
        'inst -> PTN . intt   /   BLT',
        'inst -> PTN . intt   /   RDN',
        'inst -> PTN . intt   /   PTN',
        'inst -> PTN . intt   /   LABEL',
        'inst -> PTN . intt   /   HLT',
        'inst -> PTN . intt   /   <EOF>',
        'inst -> PTN . intt   /   ADD',
        'inst -> PTN . intt   /   SUB',
        'inst -> PTN . intt   /   MUL',
        'inst -> PTN . intt   /   MOV',
        'inst -> PTN . intt   /   LOD',
        'inst -> PTN . intt   /   STR'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '36' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 36, LABEL: 34, INT: 35 }
    },
    '16': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP',
        'inst -> HLT . intt   /   JMP',
        'inst -> HLT . intt   /   BEQ',
        'inst -> HLT . intt   /   BLT',
        'inst -> HLT . intt   /   RDN',
        'inst -> HLT . intt   /   PTN',
        'inst -> HLT . intt   /   HLT',
        'inst -> HLT . intt   /   LABEL',
        'inst -> HLT . intt   /   <EOF>',
        'inst -> HLT . intt   /   ADD',
        'inst -> HLT . intt   /   SUB',
        'inst -> HLT . intt   /   MUL',
        'inst -> HLT . intt   /   MOV',
        'inst -> HLT . intt   /   LOD',
        'inst -> HLT . intt   /   STR'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '37' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 37, LABEL: 34, INT: 35 }
    },
    '17': {
      items: [ 'label -> LABEL .    /   COLON' ],
      actions: { COLON: [ 'R <label -> LABEL>' ] },
      next: {}
    },
    '18': {
      items: [
        'inst ->  . LOD intt intt intt   /   LABEL',
        'inst ->  . PTN intt   /   JMP',
        'inst ->  . HLT intt   /   JMP',
        'inst ->  . ADD intt intt intt   /   BEQ',
        'inst ->  . SUB intt intt intt   /   BEQ',
        'inst ->  . MUL intt intt intt   /   BEQ',
        'inst ->  . MOV intt intt   /   BEQ',
        'inst ->  . LOD intt intt intt   /   BEQ',
        'inst ->  . STR intt intt intt   /   BEQ',
        'inst ->  . JMP intt intt intt   /   BEQ',
        'inst ->  . BEQ intt intt intt   /   BEQ',
        'inst ->  . STR intt intt intt   /   LABEL',
        'inst ->  . BLT intt intt intt   /   BEQ',
        'inst ->  . RDN intt   /   BEQ',
        'inst ->  . PTN intt   /   BEQ',
        'inst ->  . HLT intt   /   BEQ',
        'inst ->  . ADD intt intt intt   /   BLT',
        'inst ->  . SUB intt intt intt   /   BLT',
        'inst ->  . MUL intt intt intt   /   BLT',
        'inst ->  . MOV intt intt   /   BLT',
        'inst ->  . LOD intt intt intt   /   BLT',
        'inst ->  . STR intt intt intt   /   BLT',
        'inst ->  . JMP intt intt intt   /   LABEL',
        'inst ->  . JMP intt intt intt   /   BLT',
        'inst ->  . BEQ intt intt intt   /   BLT',
        'inst ->  . BLT intt intt intt   /   BLT',
        'inst ->  . RDN intt   /   BLT',
        'inst ->  . PTN intt   /   BLT',
        'inst ->  . HLT intt   /   BLT',
        'inst ->  . ADD intt intt intt   /   RDN',
        'inst ->  . SUB intt intt intt   /   RDN',
        'inst ->  . MUL intt intt intt   /   RDN',
        'inst ->  . MOV intt intt   /   RDN',
        'inst ->  . BEQ intt intt intt   /   LABEL',
        'inst ->  . LOD intt intt intt   /   RDN',
        'inst ->  . STR intt intt intt   /   RDN',
        'inst ->  . JMP intt intt intt   /   RDN',
        'inst ->  . BEQ intt intt intt   /   RDN',
        'inst ->  . BLT intt intt intt   /   RDN',
        'inst ->  . RDN intt   /   RDN',
        'inst ->  . PTN intt   /   RDN',
        'inst ->  . HLT intt   /   RDN',
        'inst ->  . ADD intt intt intt   /   PTN',
        'inst ->  . SUB intt intt intt   /   PTN',
        'inst ->  . BLT intt intt intt   /   LABEL',
        'inst ->  . MUL intt intt intt   /   PTN',
        'inst ->  . MOV intt intt   /   PTN',
        'inst ->  . LOD intt intt intt   /   PTN',
        'inst ->  . STR intt intt intt   /   PTN',
        'inst ->  . JMP intt intt intt   /   PTN',
        'inst ->  . BEQ intt intt intt   /   PTN',
        'inst ->  . BLT intt intt intt   /   PTN',
        'inst ->  . RDN intt   /   PTN',
        'inst ->  . PTN intt   /   PTN',
        'inst ->  . HLT intt   /   PTN',
        'inst ->  . RDN intt   /   LABEL',
        'inst ->  . ADD intt intt intt   /   HLT',
        'inst ->  . SUB intt intt intt   /   HLT',
        'inst ->  . MUL intt intt intt   /   HLT',
        'inst ->  . MOV intt intt   /   HLT',
        'inst ->  . LOD intt intt intt   /   HLT',
        'inst ->  . STR intt intt intt   /   HLT',
        'inst ->  . JMP intt intt intt   /   HLT',
        'inst ->  . BEQ intt intt intt   /   HLT',
        'inst ->  . BLT intt intt intt   /   HLT',
        'inst ->  . RDN intt   /   HLT',
        'inst ->  . PTN intt   /   LABEL',
        'inst ->  . PTN intt   /   HLT',
        'inst ->  . HLT intt   /   HLT',
        'inst ->  . ADD intt intt intt   /   <EOF>',
        'inst ->  . SUB intt intt intt   /   <EOF>',
        'inst ->  . MUL intt intt intt   /   <EOF>',
        'inst ->  . MOV intt intt   /   <EOF>',
        'inst ->  . LOD intt intt intt   /   <EOF>',
        'inst ->  . STR intt intt intt   /   <EOF>',
        'inst ->  . JMP intt intt intt   /   <EOF>',
        'inst ->  . BEQ intt intt intt   /   <EOF>',
        'inst ->  . HLT intt   /   LABEL',
        'inst ->  . BLT intt intt intt   /   <EOF>',
        'inst ->  . RDN intt   /   <EOF>',
        'inst ->  . PTN intt   /   <EOF>',
        'inst ->  . HLT intt   /   <EOF>',
        'inst ->  . ADD intt intt intt   /   ADD',
        'inst ->  . SUB intt intt intt   /   ADD',
        'inst ->  . MUL intt intt intt   /   ADD',
        'inst ->  . MOV intt intt   /   ADD',
        'inst ->  . LOD intt intt intt   /   ADD',
        'inst ->  . STR intt intt intt   /   ADD',
        'inst ->  . JMP intt intt intt   /   ADD',
        'inst ->  . BEQ intt intt intt   /   ADD',
        'inst ->  . BLT intt intt intt   /   ADD',
        'inst ->  . RDN intt   /   ADD',
        'inst ->  . PTN intt   /   ADD',
        'inst ->  . HLT intt   /   ADD',
        'inst ->  . ADD intt intt intt   /   SUB',
        'inst ->  . SUB intt intt intt   /   SUB',
        'inst ->  . MUL intt intt intt   /   SUB',
        'inst ->  . MOV intt intt   /   SUB',
        'inst ->  . LOD intt intt intt   /   SUB',
        'inst ->  . STR intt intt intt   /   SUB',
        'inst ->  . JMP intt intt intt   /   SUB',
        'inst ->  . BEQ intt intt intt   /   SUB',
        'inst ->  . BLT intt intt intt   /   SUB',
        'inst ->  . RDN intt   /   SUB',
        'instlist -> label COLON . inst instlist   /   <EOF>',
        'inst ->  . PTN intt   /   SUB',
        'inst ->  . HLT intt   /   SUB',
        'inst ->  . ADD intt intt intt   /   MUL',
        'inst ->  . SUB intt intt intt   /   MUL',
        'inst ->  . MUL intt intt intt   /   MUL',
        'inst ->  . MOV intt intt   /   MUL',
        'inst ->  . LOD intt intt intt   /   MUL',
        'inst ->  . STR intt intt intt   /   MUL',
        'inst ->  . JMP intt intt intt   /   MUL',
        'inst ->  . BEQ intt intt intt   /   MUL',
        'inst ->  . BLT intt intt intt   /   MUL',
        'inst ->  . RDN intt   /   MUL',
        'inst ->  . PTN intt   /   MUL',
        'inst ->  . HLT intt   /   MUL',
        'inst ->  . ADD intt intt intt   /   MOV',
        'inst ->  . SUB intt intt intt   /   MOV',
        'inst ->  . MUL intt intt intt   /   MOV',
        'inst ->  . MOV intt intt   /   MOV',
        'inst ->  . LOD intt intt intt   /   MOV',
        'inst ->  . STR intt intt intt   /   MOV',
        'inst ->  . ADD intt intt intt   /   LABEL',
        'inst ->  . JMP intt intt intt   /   MOV',
        'inst ->  . BEQ intt intt intt   /   MOV',
        'inst ->  . BLT intt intt intt   /   MOV',
        'inst ->  . RDN intt   /   MOV',
        'inst ->  . PTN intt   /   MOV',
        'inst ->  . HLT intt   /   MOV',
        'inst ->  . ADD intt intt intt   /   LOD',
        'inst ->  . SUB intt intt intt   /   LOD',
        'inst ->  . MUL intt intt intt   /   LOD',
        'inst ->  . MOV intt intt   /   LOD',
        'inst ->  . SUB intt intt intt   /   LABEL',
        'inst ->  . LOD intt intt intt   /   LOD',
        'inst ->  . STR intt intt intt   /   LOD',
        'inst ->  . JMP intt intt intt   /   LOD',
        'inst ->  . BEQ intt intt intt   /   LOD',
        'inst ->  . BLT intt intt intt   /   LOD',
        'inst ->  . RDN intt   /   LOD',
        'inst ->  . PTN intt   /   LOD',
        'inst ->  . HLT intt   /   LOD',
        'inst ->  . ADD intt intt intt   /   STR',
        'inst ->  . SUB intt intt intt   /   STR',
        'inst ->  . MUL intt intt intt   /   LABEL',
        'inst ->  . MUL intt intt intt   /   STR',
        'inst ->  . MOV intt intt   /   STR',
        'inst ->  . LOD intt intt intt   /   STR',
        'inst ->  . STR intt intt intt   /   STR',
        'inst ->  . JMP intt intt intt   /   STR',
        'inst ->  . BEQ intt intt intt   /   STR',
        'inst ->  . BLT intt intt intt   /   STR',
        'inst ->  . RDN intt   /   STR',
        'inst ->  . PTN intt   /   STR',
        'inst ->  . HLT intt   /   STR',
        'inst ->  . MOV intt intt   /   LABEL',
        'inst ->  . ADD intt intt intt   /   JMP',
        'inst ->  . SUB intt intt intt   /   JMP',
        'inst ->  . MUL intt intt intt   /   JMP',
        'inst ->  . MOV intt intt   /   JMP',
        'inst ->  . LOD intt intt intt   /   JMP',
        'inst ->  . STR intt intt intt   /   JMP',
        'inst ->  . JMP intt intt intt   /   JMP',
        'inst ->  . BEQ intt intt intt   /   JMP',
        'inst ->  . BLT intt intt intt   /   JMP',
        'inst ->  . RDN intt   /   JMP'
      ],
      actions: {
        inst: [ '38' ],
        ADD: [ 'S5' ],
        SUB: [ 'S6' ],
        MUL: [ 'S7' ],
        MOV: [ 'S8' ],
        LOD: [ 'S9' ],
        STR: [ 'S10' ],
        JMP: [ 'S11' ],
        BEQ: [ 'S12' ],
        BLT: [ 'S13' ],
        RDN: [ 'S14' ],
        PTN: [ 'S15' ],
        HLT: [ 'S16' ]
      },
      next: {
        inst: 38,
        ADD: 5,
        SUB: 6,
        MUL: 7,
        MOV: 8,
        LOD: 9,
        STR: 10,
        JMP: 11,
        BEQ: 12,
        BLT: 13,
        RDN: 14,
        PTN: 15,
        HLT: 16
      }
    },
    '19': {
      items: [ 'instlist -> inst instlist .    /   <EOF>' ],
      actions: { '<EOF>': [ 'R <instlist -> inst instlist>' ] },
      next: {}
    },
    '20': {
      items: [ 'intt -> label .    /   INT', 'intt -> label .    /   LABEL' ],
      actions: { LABEL: [ 'R <intt -> label>' ], INT: [ 'R <intt -> label>' ] },
      next: {}
    },
    '21': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> ADD intt . intt intt   /   BEQ',
        'inst -> ADD intt . intt intt   /   BLT',
        'inst -> ADD intt . intt intt   /   RDN',
        'inst -> ADD intt . intt intt   /   PTN',
        'inst -> ADD intt . intt intt   /   HLT',
        'inst -> ADD intt . intt intt   /   <EOF>',
        'inst -> ADD intt . intt intt   /   ADD',
        'inst -> ADD intt . intt intt   /   SUB',
        'inst -> ADD intt . intt intt   /   MUL',
        'inst -> ADD intt . intt intt   /   MOV',
        'inst -> ADD intt . intt intt   /   LABEL',
        'inst -> ADD intt . intt intt   /   LOD',
        'inst -> ADD intt . intt intt   /   STR',
        'inst -> ADD intt . intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '39' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 39, LABEL: 22, INT: 23 }
    },
    '22': {
      items: [ 'label -> LABEL .    /   INT', 'label -> LABEL .    /   LABEL' ],
      actions: { LABEL: [ 'R <label -> LABEL>' ], INT: [ 'R <label -> LABEL>' ] },
      next: {}
    },
    '23': {
      items: [ 'intt -> INT .    /   INT', 'intt -> INT .    /   LABEL' ],
      actions: { LABEL: [ 'R <intt -> INT>' ], INT: [ 'R <intt -> INT>' ] },
      next: {}
    },
    '24': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> SUB intt . intt intt   /   BEQ',
        'inst -> SUB intt . intt intt   /   BLT',
        'inst -> SUB intt . intt intt   /   RDN',
        'inst -> SUB intt . intt intt   /   PTN',
        'inst -> SUB intt . intt intt   /   HLT',
        'inst -> SUB intt . intt intt   /   <EOF>',
        'inst -> SUB intt . intt intt   /   ADD',
        'inst -> SUB intt . intt intt   /   SUB',
        'inst -> SUB intt . intt intt   /   MUL',
        'inst -> SUB intt . intt intt   /   MOV',
        'inst -> SUB intt . intt intt   /   LOD',
        'inst -> SUB intt . intt intt   /   LABEL',
        'inst -> SUB intt . intt intt   /   STR',
        'inst -> SUB intt . intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '40' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 40, LABEL: 22, INT: 23 }
    },
    '25': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> MUL intt . intt intt   /   BEQ',
        'inst -> MUL intt . intt intt   /   BLT',
        'inst -> MUL intt . intt intt   /   RDN',
        'inst -> MUL intt . intt intt   /   PTN',
        'inst -> MUL intt . intt intt   /   HLT',
        'inst -> MUL intt . intt intt   /   <EOF>',
        'inst -> MUL intt . intt intt   /   ADD',
        'inst -> MUL intt . intt intt   /   SUB',
        'inst -> MUL intt . intt intt   /   MUL',
        'inst -> MUL intt . intt intt   /   MOV',
        'inst -> MUL intt . intt intt   /   LOD',
        'inst -> MUL intt . intt intt   /   LABEL',
        'inst -> MUL intt . intt intt   /   STR',
        'inst -> MUL intt . intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '41' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 41, LABEL: 22, INT: 23 }
    },
    '26': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP',
        'inst -> MOV intt . intt   /   BEQ',
        'inst -> MOV intt . intt   /   BLT',
        'inst -> MOV intt . intt   /   RDN',
        'inst -> MOV intt . intt   /   PTN',
        'inst -> MOV intt . intt   /   HLT',
        'inst -> MOV intt . intt   /   <EOF>',
        'inst -> MOV intt . intt   /   ADD',
        'inst -> MOV intt . intt   /   SUB',
        'inst -> MOV intt . intt   /   MUL',
        'inst -> MOV intt . intt   /   MOV',
        'inst -> MOV intt . intt   /   LOD',
        'inst -> MOV intt . intt   /   STR',
        'inst -> MOV intt . intt   /   LABEL',
        'inst -> MOV intt . intt   /   JMP'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '42' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 42, LABEL: 34, INT: 35 }
    },
    '27': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> LOD intt . intt intt   /   LABEL',
        'inst -> LOD intt . intt intt   /   BEQ',
        'inst -> LOD intt . intt intt   /   BLT',
        'inst -> LOD intt . intt intt   /   RDN',
        'inst -> LOD intt . intt intt   /   PTN',
        'inst -> LOD intt . intt intt   /   HLT',
        'inst -> LOD intt . intt intt   /   <EOF>',
        'inst -> LOD intt . intt intt   /   ADD',
        'inst -> LOD intt . intt intt   /   SUB',
        'inst -> LOD intt . intt intt   /   MUL',
        'inst -> LOD intt . intt intt   /   MOV',
        'inst -> LOD intt . intt intt   /   LOD',
        'inst -> LOD intt . intt intt   /   STR',
        'inst -> LOD intt . intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '43' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 43, LABEL: 22, INT: 23 }
    },
    '28': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> STR intt . intt intt   /   BEQ',
        'inst -> STR intt . intt intt   /   LABEL',
        'inst -> STR intt . intt intt   /   BLT',
        'inst -> STR intt . intt intt   /   RDN',
        'inst -> STR intt . intt intt   /   PTN',
        'inst -> STR intt . intt intt   /   HLT',
        'inst -> STR intt . intt intt   /   <EOF>',
        'inst -> STR intt . intt intt   /   ADD',
        'inst -> STR intt . intt intt   /   SUB',
        'inst -> STR intt . intt intt   /   MUL',
        'inst -> STR intt . intt intt   /   MOV',
        'inst -> STR intt . intt intt   /   LOD',
        'inst -> STR intt . intt intt   /   STR',
        'inst -> STR intt . intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '44' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 44, LABEL: 22, INT: 23 }
    },
    '29': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> JMP intt . intt intt   /   BEQ',
        'inst -> JMP intt . intt intt   /   LABEL',
        'inst -> JMP intt . intt intt   /   BLT',
        'inst -> JMP intt . intt intt   /   RDN',
        'inst -> JMP intt . intt intt   /   PTN',
        'inst -> JMP intt . intt intt   /   HLT',
        'inst -> JMP intt . intt intt   /   <EOF>',
        'inst -> JMP intt . intt intt   /   ADD',
        'inst -> JMP intt . intt intt   /   SUB',
        'inst -> JMP intt . intt intt   /   MUL',
        'inst -> JMP intt . intt intt   /   MOV',
        'inst -> JMP intt . intt intt   /   LOD',
        'inst -> JMP intt . intt intt   /   STR',
        'inst -> JMP intt . intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '45' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 45, LABEL: 22, INT: 23 }
    },
    '30': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> BEQ intt . intt intt   /   BEQ',
        'inst -> BEQ intt . intt intt   /   BLT',
        'inst -> BEQ intt . intt intt   /   LABEL',
        'inst -> BEQ intt . intt intt   /   RDN',
        'inst -> BEQ intt . intt intt   /   PTN',
        'inst -> BEQ intt . intt intt   /   HLT',
        'inst -> BEQ intt . intt intt   /   <EOF>',
        'inst -> BEQ intt . intt intt   /   ADD',
        'inst -> BEQ intt . intt intt   /   SUB',
        'inst -> BEQ intt . intt intt   /   MUL',
        'inst -> BEQ intt . intt intt   /   MOV',
        'inst -> BEQ intt . intt intt   /   LOD',
        'inst -> BEQ intt . intt intt   /   STR',
        'inst -> BEQ intt . intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '46' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 46, LABEL: 22, INT: 23 }
    },
    '31': {
      items: [
        'intt ->  . INT   /   INT',
        'intt ->  . label   /   INT',
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   INT',
        'label ->  . LABEL   /   LABEL',
        'inst -> BLT intt . intt intt   /   BEQ',
        'inst -> BLT intt . intt intt   /   BLT',
        'inst -> BLT intt . intt intt   /   RDN',
        'inst -> BLT intt . intt intt   /   LABEL',
        'inst -> BLT intt . intt intt   /   PTN',
        'inst -> BLT intt . intt intt   /   HLT',
        'inst -> BLT intt . intt intt   /   <EOF>',
        'inst -> BLT intt . intt intt   /   ADD',
        'inst -> BLT intt . intt intt   /   SUB',
        'inst -> BLT intt . intt intt   /   MUL',
        'inst -> BLT intt . intt intt   /   MOV',
        'inst -> BLT intt . intt intt   /   LOD',
        'inst -> BLT intt . intt intt   /   STR',
        'inst -> BLT intt . intt intt   /   JMP'
      ],
      actions: {
        label: [ '20' ],
        intt: [ '47' ],
        LABEL: [ 'S22' ],
        INT: [ 'S23' ]
      },
      next: { label: 20, intt: 47, LABEL: 22, INT: 23 }
    },
    '32': {
      items: [
        'intt -> label .    /   LABEL',
        'intt -> label .    /   BEQ',
        'intt -> label .    /   BLT',
        'intt -> label .    /   RDN',
        'intt -> label .    /   PTN',
        'intt -> label .    /   HLT',
        'intt -> label .    /   <EOF>',
        'intt -> label .    /   ADD',
        'intt -> label .    /   SUB',
        'intt -> label .    /   MUL',
        'intt -> label .    /   MOV',
        'intt -> label .    /   LOD',
        'intt -> label .    /   STR',
        'intt -> label .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <intt -> label>' ],
        ADD: [ 'R <intt -> label>' ],
        SUB: [ 'R <intt -> label>' ],
        MUL: [ 'R <intt -> label>' ],
        MOV: [ 'R <intt -> label>' ],
        LOD: [ 'R <intt -> label>' ],
        STR: [ 'R <intt -> label>' ],
        JMP: [ 'R <intt -> label>' ],
        BEQ: [ 'R <intt -> label>' ],
        BLT: [ 'R <intt -> label>' ],
        RDN: [ 'R <intt -> label>' ],
        PTN: [ 'R <intt -> label>' ],
        HLT: [ 'R <intt -> label>' ],
        LABEL: [ 'R <intt -> label>' ]
      },
      next: {}
    },
    '33': {
      items: [
        'inst -> RDN intt .    /   BEQ',
        'inst -> RDN intt .    /   BLT',
        'inst -> RDN intt .    /   RDN',
        'inst -> RDN intt .    /   PTN',
        'inst -> RDN intt .    /   LABEL',
        'inst -> RDN intt .    /   HLT',
        'inst -> RDN intt .    /   <EOF>',
        'inst -> RDN intt .    /   ADD',
        'inst -> RDN intt .    /   SUB',
        'inst -> RDN intt .    /   MUL',
        'inst -> RDN intt .    /   MOV',
        'inst -> RDN intt .    /   LOD',
        'inst -> RDN intt .    /   STR',
        'inst -> RDN intt .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> RDN intt>' ],
        ADD: [ 'R <inst -> RDN intt>' ],
        SUB: [ 'R <inst -> RDN intt>' ],
        MUL: [ 'R <inst -> RDN intt>' ],
        MOV: [ 'R <inst -> RDN intt>' ],
        LOD: [ 'R <inst -> RDN intt>' ],
        STR: [ 'R <inst -> RDN intt>' ],
        JMP: [ 'R <inst -> RDN intt>' ],
        BEQ: [ 'R <inst -> RDN intt>' ],
        BLT: [ 'R <inst -> RDN intt>' ],
        RDN: [ 'R <inst -> RDN intt>' ],
        PTN: [ 'R <inst -> RDN intt>' ],
        HLT: [ 'R <inst -> RDN intt>' ],
        LABEL: [ 'R <inst -> RDN intt>' ]
      },
      next: {}
    },
    '34': {
      items: [
        'label -> LABEL .    /   LABEL',
        'label -> LABEL .    /   BEQ',
        'label -> LABEL .    /   BLT',
        'label -> LABEL .    /   RDN',
        'label -> LABEL .    /   PTN',
        'label -> LABEL .    /   HLT',
        'label -> LABEL .    /   <EOF>',
        'label -> LABEL .    /   ADD',
        'label -> LABEL .    /   SUB',
        'label -> LABEL .    /   MUL',
        'label -> LABEL .    /   MOV',
        'label -> LABEL .    /   LOD',
        'label -> LABEL .    /   STR',
        'label -> LABEL .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <label -> LABEL>' ],
        ADD: [ 'R <label -> LABEL>' ],
        SUB: [ 'R <label -> LABEL>' ],
        MUL: [ 'R <label -> LABEL>' ],
        MOV: [ 'R <label -> LABEL>' ],
        LOD: [ 'R <label -> LABEL>' ],
        STR: [ 'R <label -> LABEL>' ],
        JMP: [ 'R <label -> LABEL>' ],
        BEQ: [ 'R <label -> LABEL>' ],
        BLT: [ 'R <label -> LABEL>' ],
        RDN: [ 'R <label -> LABEL>' ],
        PTN: [ 'R <label -> LABEL>' ],
        HLT: [ 'R <label -> LABEL>' ],
        LABEL: [ 'R <label -> LABEL>' ]
      },
      next: {}
    },
    '35': {
      items: [
        'intt -> INT .    /   LABEL',
        'intt -> INT .    /   BEQ',
        'intt -> INT .    /   BLT',
        'intt -> INT .    /   RDN',
        'intt -> INT .    /   PTN',
        'intt -> INT .    /   HLT',
        'intt -> INT .    /   <EOF>',
        'intt -> INT .    /   ADD',
        'intt -> INT .    /   SUB',
        'intt -> INT .    /   MUL',
        'intt -> INT .    /   MOV',
        'intt -> INT .    /   LOD',
        'intt -> INT .    /   STR',
        'intt -> INT .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <intt -> INT>' ],
        ADD: [ 'R <intt -> INT>' ],
        SUB: [ 'R <intt -> INT>' ],
        MUL: [ 'R <intt -> INT>' ],
        MOV: [ 'R <intt -> INT>' ],
        LOD: [ 'R <intt -> INT>' ],
        STR: [ 'R <intt -> INT>' ],
        JMP: [ 'R <intt -> INT>' ],
        BEQ: [ 'R <intt -> INT>' ],
        BLT: [ 'R <intt -> INT>' ],
        RDN: [ 'R <intt -> INT>' ],
        PTN: [ 'R <intt -> INT>' ],
        HLT: [ 'R <intt -> INT>' ],
        LABEL: [ 'R <intt -> INT>' ]
      },
      next: {}
    },
    '36': {
      items: [
        'inst -> PTN intt .    /   JMP',
        'inst -> PTN intt .    /   BEQ',
        'inst -> PTN intt .    /   BLT',
        'inst -> PTN intt .    /   RDN',
        'inst -> PTN intt .    /   PTN',
        'inst -> PTN intt .    /   LABEL',
        'inst -> PTN intt .    /   HLT',
        'inst -> PTN intt .    /   <EOF>',
        'inst -> PTN intt .    /   ADD',
        'inst -> PTN intt .    /   SUB',
        'inst -> PTN intt .    /   MUL',
        'inst -> PTN intt .    /   MOV',
        'inst -> PTN intt .    /   LOD',
        'inst -> PTN intt .    /   STR'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> PTN intt>' ],
        ADD: [ 'R <inst -> PTN intt>' ],
        SUB: [ 'R <inst -> PTN intt>' ],
        MUL: [ 'R <inst -> PTN intt>' ],
        MOV: [ 'R <inst -> PTN intt>' ],
        LOD: [ 'R <inst -> PTN intt>' ],
        STR: [ 'R <inst -> PTN intt>' ],
        JMP: [ 'R <inst -> PTN intt>' ],
        BEQ: [ 'R <inst -> PTN intt>' ],
        BLT: [ 'R <inst -> PTN intt>' ],
        RDN: [ 'R <inst -> PTN intt>' ],
        PTN: [ 'R <inst -> PTN intt>' ],
        HLT: [ 'R <inst -> PTN intt>' ],
        LABEL: [ 'R <inst -> PTN intt>' ]
      },
      next: {}
    },
    '37': {
      items: [
        'inst -> HLT intt .    /   JMP',
        'inst -> HLT intt .    /   BEQ',
        'inst -> HLT intt .    /   BLT',
        'inst -> HLT intt .    /   RDN',
        'inst -> HLT intt .    /   PTN',
        'inst -> HLT intt .    /   HLT',
        'inst -> HLT intt .    /   LABEL',
        'inst -> HLT intt .    /   <EOF>',
        'inst -> HLT intt .    /   ADD',
        'inst -> HLT intt .    /   SUB',
        'inst -> HLT intt .    /   MUL',
        'inst -> HLT intt .    /   MOV',
        'inst -> HLT intt .    /   LOD',
        'inst -> HLT intt .    /   STR'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> HLT intt>' ],
        ADD: [ 'R <inst -> HLT intt>' ],
        SUB: [ 'R <inst -> HLT intt>' ],
        MUL: [ 'R <inst -> HLT intt>' ],
        MOV: [ 'R <inst -> HLT intt>' ],
        LOD: [ 'R <inst -> HLT intt>' ],
        STR: [ 'R <inst -> HLT intt>' ],
        JMP: [ 'R <inst -> HLT intt>' ],
        BEQ: [ 'R <inst -> HLT intt>' ],
        BLT: [ 'R <inst -> HLT intt>' ],
        RDN: [ 'R <inst -> HLT intt>' ],
        PTN: [ 'R <inst -> HLT intt>' ],
        HLT: [ 'R <inst -> HLT intt>' ],
        LABEL: [ 'R <inst -> HLT intt>' ]
      },
      next: {}
    },
    '38': {
      items: [
        'inst ->  . LOD intt intt intt   /   LABEL',
        'inst ->  . PTN intt   /   JMP',
        'inst ->  . HLT intt   /   JMP',
        'inst ->  . ADD intt intt intt   /   BEQ',
        'inst ->  . SUB intt intt intt   /   BEQ',
        'inst ->  . MUL intt intt intt   /   BEQ',
        'inst ->  . MOV intt intt   /   BEQ',
        'inst ->  . LOD intt intt intt   /   BEQ',
        'inst ->  . STR intt intt intt   /   BEQ',
        'inst ->  . JMP intt intt intt   /   BEQ',
        'inst ->  . BEQ intt intt intt   /   BEQ',
        'inst ->  . STR intt intt intt   /   LABEL',
        'inst ->  . BLT intt intt intt   /   BEQ',
        'inst ->  . RDN intt   /   BEQ',
        'inst ->  . PTN intt   /   BEQ',
        'inst ->  . HLT intt   /   BEQ',
        'inst ->  . ADD intt intt intt   /   BLT',
        'inst ->  . SUB intt intt intt   /   BLT',
        'inst ->  . MUL intt intt intt   /   BLT',
        'inst ->  . MOV intt intt   /   BLT',
        'inst ->  . LOD intt intt intt   /   BLT',
        'inst ->  . STR intt intt intt   /   BLT',
        'inst ->  . JMP intt intt intt   /   LABEL',
        'inst ->  . JMP intt intt intt   /   BLT',
        'inst ->  . BEQ intt intt intt   /   BLT',
        'inst ->  . BLT intt intt intt   /   BLT',
        'inst ->  . RDN intt   /   BLT',
        'inst ->  . PTN intt   /   BLT',
        'inst ->  . HLT intt   /   BLT',
        'inst ->  . ADD intt intt intt   /   RDN',
        'inst ->  . SUB intt intt intt   /   RDN',
        'inst ->  . MUL intt intt intt   /   RDN',
        'inst ->  . MOV intt intt   /   RDN',
        'inst ->  . BEQ intt intt intt   /   LABEL',
        'inst ->  . LOD intt intt intt   /   RDN',
        'inst ->  . STR intt intt intt   /   RDN',
        'inst ->  . JMP intt intt intt   /   RDN',
        'inst ->  . BEQ intt intt intt   /   RDN',
        'inst ->  . BLT intt intt intt   /   RDN',
        'inst ->  . RDN intt   /   RDN',
        'inst ->  . PTN intt   /   RDN',
        'inst ->  . HLT intt   /   RDN',
        'inst ->  . ADD intt intt intt   /   PTN',
        'inst ->  . SUB intt intt intt   /   PTN',
        'inst ->  . BLT intt intt intt   /   LABEL',
        'inst ->  . MUL intt intt intt   /   PTN',
        'inst ->  . MOV intt intt   /   PTN',
        'inst ->  . LOD intt intt intt   /   PTN',
        'inst ->  . STR intt intt intt   /   PTN',
        'inst ->  . JMP intt intt intt   /   PTN',
        'inst ->  . BEQ intt intt intt   /   PTN',
        'inst ->  . BLT intt intt intt   /   PTN',
        'inst ->  . RDN intt   /   PTN',
        'inst ->  . PTN intt   /   PTN',
        'inst ->  . HLT intt   /   PTN',
        'inst ->  . RDN intt   /   LABEL',
        'inst ->  . ADD intt intt intt   /   HLT',
        'inst ->  . SUB intt intt intt   /   HLT',
        'inst ->  . MUL intt intt intt   /   HLT',
        'inst ->  . MOV intt intt   /   HLT',
        'inst ->  . LOD intt intt intt   /   HLT',
        'inst ->  . STR intt intt intt   /   HLT',
        'inst ->  . JMP intt intt intt   /   HLT',
        'inst ->  . BEQ intt intt intt   /   HLT',
        'inst ->  . BLT intt intt intt   /   HLT',
        'inst ->  . RDN intt   /   HLT',
        'inst ->  . PTN intt   /   LABEL',
        'inst ->  . PTN intt   /   HLT',
        'inst ->  . HLT intt   /   HLT',
        'inst ->  . ADD intt intt intt   /   <EOF>',
        'inst ->  . SUB intt intt intt   /   <EOF>',
        'inst ->  . MUL intt intt intt   /   <EOF>',
        'inst ->  . MOV intt intt   /   <EOF>',
        'inst ->  . LOD intt intt intt   /   <EOF>',
        'inst ->  . STR intt intt intt   /   <EOF>',
        'inst ->  . JMP intt intt intt   /   <EOF>',
        'inst ->  . BEQ intt intt intt   /   <EOF>',
        'inst ->  . HLT intt   /   LABEL',
        'inst ->  . BLT intt intt intt   /   <EOF>',
        'inst ->  . RDN intt   /   <EOF>',
        'inst ->  . PTN intt   /   <EOF>',
        'inst ->  . HLT intt   /   <EOF>',
        'inst ->  . ADD intt intt intt   /   ADD',
        'inst ->  . SUB intt intt intt   /   ADD',
        'instlist ->  . label COLON inst instlist   /   <EOF>',
        'inst ->  . MUL intt intt intt   /   ADD',
        'inst ->  . MOV intt intt   /   ADD',
        'inst ->  . LOD intt intt intt   /   ADD',
        'inst ->  . STR intt intt intt   /   ADD',
        'inst ->  . JMP intt intt intt   /   ADD',
        'inst ->  . BEQ intt intt intt   /   ADD',
        'inst ->  . BLT intt intt intt   /   ADD',
        'inst ->  . RDN intt   /   ADD',
        'inst ->  . PTN intt   /   ADD',
        'inst ->  . HLT intt   /   ADD',
        'instlist ->  . inst instlist   /   <EOF>',
        'inst ->  . ADD intt intt intt   /   SUB',
        'inst ->  . SUB intt intt intt   /   SUB',
        'inst ->  . MUL intt intt intt   /   SUB',
        'inst ->  . MOV intt intt   /   SUB',
        'inst ->  . LOD intt intt intt   /   SUB',
        'inst ->  . STR intt intt intt   /   SUB',
        'inst ->  . JMP intt intt intt   /   SUB',
        'inst ->  . BEQ intt intt intt   /   SUB',
        'inst ->  . BLT intt intt intt   /   SUB',
        'inst ->  . RDN intt   /   SUB',
        'instlist ->  .    /   <EOF>',
        'inst ->  . PTN intt   /   SUB',
        'inst ->  . HLT intt   /   SUB',
        'inst ->  . ADD intt intt intt   /   MUL',
        'inst ->  . SUB intt intt intt   /   MUL',
        'inst ->  . MUL intt intt intt   /   MUL',
        'inst ->  . MOV intt intt   /   MUL',
        'inst ->  . LOD intt intt intt   /   MUL',
        'inst ->  . STR intt intt intt   /   MUL',
        'inst ->  . JMP intt intt intt   /   MUL',
        'inst ->  . BEQ intt intt intt   /   MUL',
        'label ->  . LABEL   /   COLON',
        'inst ->  . BLT intt intt intt   /   MUL',
        'inst ->  . RDN intt   /   MUL',
        'inst ->  . PTN intt   /   MUL',
        'inst ->  . HLT intt   /   MUL',
        'inst ->  . ADD intt intt intt   /   MOV',
        'inst ->  . SUB intt intt intt   /   MOV',
        'inst ->  . MUL intt intt intt   /   MOV',
        'inst ->  . MOV intt intt   /   MOV',
        'inst ->  . LOD intt intt intt   /   MOV',
        'inst ->  . STR intt intt intt   /   MOV',
        'inst ->  . ADD intt intt intt   /   LABEL',
        'inst ->  . JMP intt intt intt   /   MOV',
        'instlist -> label COLON inst . instlist   /   <EOF>',
        'inst ->  . BEQ intt intt intt   /   MOV',
        'inst ->  . BLT intt intt intt   /   MOV',
        'inst ->  . RDN intt   /   MOV',
        'inst ->  . PTN intt   /   MOV',
        'inst ->  . HLT intt   /   MOV',
        'inst ->  . ADD intt intt intt   /   LOD',
        'inst ->  . SUB intt intt intt   /   LOD',
        'inst ->  . MUL intt intt intt   /   LOD',
        'inst ->  . MOV intt intt   /   LOD',
        'inst ->  . SUB intt intt intt   /   LABEL',
        'inst ->  . LOD intt intt intt   /   LOD',
        'inst ->  . STR intt intt intt   /   LOD',
        'inst ->  . JMP intt intt intt   /   LOD',
        'inst ->  . BEQ intt intt intt   /   LOD',
        'inst ->  . BLT intt intt intt   /   LOD',
        'inst ->  . RDN intt   /   LOD',
        'inst ->  . PTN intt   /   LOD',
        'inst ->  . HLT intt   /   LOD',
        'inst ->  . ADD intt intt intt   /   STR',
        'inst ->  . SUB intt intt intt   /   STR',
        'inst ->  . MUL intt intt intt   /   LABEL',
        'inst ->  . MUL intt intt intt   /   STR',
        'inst ->  . MOV intt intt   /   STR',
        'inst ->  . LOD intt intt intt   /   STR',
        'inst ->  . STR intt intt intt   /   STR',
        'inst ->  . JMP intt intt intt   /   STR',
        'inst ->  . BEQ intt intt intt   /   STR',
        'inst ->  . BLT intt intt intt   /   STR',
        'inst ->  . RDN intt   /   STR',
        'inst ->  . PTN intt   /   STR',
        'inst ->  . HLT intt   /   STR',
        'inst ->  . MOV intt intt   /   LABEL',
        'inst ->  . ADD intt intt intt   /   JMP',
        'inst ->  . SUB intt intt intt   /   JMP',
        'inst ->  . MUL intt intt intt   /   JMP',
        'inst ->  . MOV intt intt   /   JMP',
        'inst ->  . LOD intt intt intt   /   JMP',
        'inst ->  . STR intt intt intt   /   JMP',
        'inst ->  . JMP intt intt intt   /   JMP',
        'inst ->  . BEQ intt intt intt   /   JMP',
        'inst ->  . BLT intt intt intt   /   JMP',
        'inst ->  . RDN intt   /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <instlist -> >' ],
        instlist: [ '48' ],
        label: [ '3' ],
        inst: [ '4' ],
        ADD: [ 'S5' ],
        SUB: [ 'S6' ],
        MUL: [ 'S7' ],
        MOV: [ 'S8' ],
        LOD: [ 'S9' ],
        STR: [ 'S10' ],
        JMP: [ 'S11' ],
        BEQ: [ 'S12' ],
        BLT: [ 'S13' ],
        RDN: [ 'S14' ],
        PTN: [ 'S15' ],
        HLT: [ 'S16' ],
        LABEL: [ 'S17' ]
      },
      next: {
        instlist: 48,
        label: 3,
        inst: 4,
        ADD: 5,
        SUB: 6,
        MUL: 7,
        MOV: 8,
        LOD: 9,
        STR: 10,
        JMP: 11,
        BEQ: 12,
        BLT: 13,
        RDN: 14,
        PTN: 15,
        HLT: 16,
        LABEL: 17
      }
    },
    '39': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP',
        'inst -> ADD intt intt . intt   /   BEQ',
        'inst -> ADD intt intt . intt   /   BLT',
        'inst -> ADD intt intt . intt   /   RDN',
        'inst -> ADD intt intt . intt   /   PTN',
        'inst -> ADD intt intt . intt   /   HLT',
        'inst -> ADD intt intt . intt   /   <EOF>',
        'inst -> ADD intt intt . intt   /   ADD',
        'inst -> ADD intt intt . intt   /   SUB',
        'inst -> ADD intt intt . intt   /   MUL',
        'inst -> ADD intt intt . intt   /   MOV',
        'inst -> ADD intt intt . intt   /   LABEL',
        'inst -> ADD intt intt . intt   /   LOD',
        'inst -> ADD intt intt . intt   /   STR',
        'inst -> ADD intt intt . intt   /   JMP'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '49' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 49, LABEL: 34, INT: 35 }
    },
    '40': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP',
        'inst -> SUB intt intt . intt   /   BEQ',
        'inst -> SUB intt intt . intt   /   BLT',
        'inst -> SUB intt intt . intt   /   RDN',
        'inst -> SUB intt intt . intt   /   PTN',
        'inst -> SUB intt intt . intt   /   HLT',
        'inst -> SUB intt intt . intt   /   <EOF>',
        'inst -> SUB intt intt . intt   /   ADD',
        'inst -> SUB intt intt . intt   /   SUB',
        'inst -> SUB intt intt . intt   /   MUL',
        'inst -> SUB intt intt . intt   /   MOV',
        'inst -> SUB intt intt . intt   /   LOD',
        'inst -> SUB intt intt . intt   /   LABEL',
        'inst -> SUB intt intt . intt   /   STR',
        'inst -> SUB intt intt . intt   /   JMP'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '50' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 50, LABEL: 34, INT: 35 }
    },
    '41': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP',
        'inst -> MUL intt intt . intt   /   BEQ',
        'inst -> MUL intt intt . intt   /   BLT',
        'inst -> MUL intt intt . intt   /   RDN',
        'inst -> MUL intt intt . intt   /   PTN',
        'inst -> MUL intt intt . intt   /   HLT',
        'inst -> MUL intt intt . intt   /   <EOF>',
        'inst -> MUL intt intt . intt   /   ADD',
        'inst -> MUL intt intt . intt   /   SUB',
        'inst -> MUL intt intt . intt   /   MUL',
        'inst -> MUL intt intt . intt   /   MOV',
        'inst -> MUL intt intt . intt   /   LOD',
        'inst -> MUL intt intt . intt   /   LABEL',
        'inst -> MUL intt intt . intt   /   STR',
        'inst -> MUL intt intt . intt   /   JMP'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '51' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 51, LABEL: 34, INT: 35 }
    },
    '42': {
      items: [
        'inst -> MOV intt intt .    /   BEQ',
        'inst -> MOV intt intt .    /   BLT',
        'inst -> MOV intt intt .    /   RDN',
        'inst -> MOV intt intt .    /   PTN',
        'inst -> MOV intt intt .    /   HLT',
        'inst -> MOV intt intt .    /   <EOF>',
        'inst -> MOV intt intt .    /   ADD',
        'inst -> MOV intt intt .    /   SUB',
        'inst -> MOV intt intt .    /   MUL',
        'inst -> MOV intt intt .    /   MOV',
        'inst -> MOV intt intt .    /   LOD',
        'inst -> MOV intt intt .    /   STR',
        'inst -> MOV intt intt .    /   LABEL',
        'inst -> MOV intt intt .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> MOV intt intt>' ],
        ADD: [ 'R <inst -> MOV intt intt>' ],
        SUB: [ 'R <inst -> MOV intt intt>' ],
        MUL: [ 'R <inst -> MOV intt intt>' ],
        MOV: [ 'R <inst -> MOV intt intt>' ],
        LOD: [ 'R <inst -> MOV intt intt>' ],
        STR: [ 'R <inst -> MOV intt intt>' ],
        JMP: [ 'R <inst -> MOV intt intt>' ],
        BEQ: [ 'R <inst -> MOV intt intt>' ],
        BLT: [ 'R <inst -> MOV intt intt>' ],
        RDN: [ 'R <inst -> MOV intt intt>' ],
        PTN: [ 'R <inst -> MOV intt intt>' ],
        HLT: [ 'R <inst -> MOV intt intt>' ],
        LABEL: [ 'R <inst -> MOV intt intt>' ]
      },
      next: {}
    },
    '43': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP',
        'inst -> LOD intt intt . intt   /   LABEL',
        'inst -> LOD intt intt . intt   /   BEQ',
        'inst -> LOD intt intt . intt   /   BLT',
        'inst -> LOD intt intt . intt   /   RDN',
        'inst -> LOD intt intt . intt   /   PTN',
        'inst -> LOD intt intt . intt   /   HLT',
        'inst -> LOD intt intt . intt   /   <EOF>',
        'inst -> LOD intt intt . intt   /   ADD',
        'inst -> LOD intt intt . intt   /   SUB',
        'inst -> LOD intt intt . intt   /   MUL',
        'inst -> LOD intt intt . intt   /   MOV',
        'inst -> LOD intt intt . intt   /   LOD',
        'inst -> LOD intt intt . intt   /   STR',
        'inst -> LOD intt intt . intt   /   JMP'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '52' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 52, LABEL: 34, INT: 35 }
    },
    '44': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP',
        'inst -> STR intt intt . intt   /   BEQ',
        'inst -> STR intt intt . intt   /   LABEL',
        'inst -> STR intt intt . intt   /   BLT',
        'inst -> STR intt intt . intt   /   RDN',
        'inst -> STR intt intt . intt   /   PTN',
        'inst -> STR intt intt . intt   /   HLT',
        'inst -> STR intt intt . intt   /   <EOF>',
        'inst -> STR intt intt . intt   /   ADD',
        'inst -> STR intt intt . intt   /   SUB',
        'inst -> STR intt intt . intt   /   MUL',
        'inst -> STR intt intt . intt   /   MOV',
        'inst -> STR intt intt . intt   /   LOD',
        'inst -> STR intt intt . intt   /   STR',
        'inst -> STR intt intt . intt   /   JMP'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '53' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 53, LABEL: 34, INT: 35 }
    },
    '45': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP',
        'inst -> JMP intt intt . intt   /   BEQ',
        'inst -> JMP intt intt . intt   /   LABEL',
        'inst -> JMP intt intt . intt   /   BLT',
        'inst -> JMP intt intt . intt   /   RDN',
        'inst -> JMP intt intt . intt   /   PTN',
        'inst -> JMP intt intt . intt   /   HLT',
        'inst -> JMP intt intt . intt   /   <EOF>',
        'inst -> JMP intt intt . intt   /   ADD',
        'inst -> JMP intt intt . intt   /   SUB',
        'inst -> JMP intt intt . intt   /   MUL',
        'inst -> JMP intt intt . intt   /   MOV',
        'inst -> JMP intt intt . intt   /   LOD',
        'inst -> JMP intt intt . intt   /   STR',
        'inst -> JMP intt intt . intt   /   JMP'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '54' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 54, LABEL: 34, INT: 35 }
    },
    '46': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP',
        'inst -> BEQ intt intt . intt   /   BEQ',
        'inst -> BEQ intt intt . intt   /   BLT',
        'inst -> BEQ intt intt . intt   /   LABEL',
        'inst -> BEQ intt intt . intt   /   RDN',
        'inst -> BEQ intt intt . intt   /   PTN',
        'inst -> BEQ intt intt . intt   /   HLT',
        'inst -> BEQ intt intt . intt   /   <EOF>',
        'inst -> BEQ intt intt . intt   /   ADD',
        'inst -> BEQ intt intt . intt   /   SUB',
        'inst -> BEQ intt intt . intt   /   MUL',
        'inst -> BEQ intt intt . intt   /   MOV',
        'inst -> BEQ intt intt . intt   /   LOD',
        'inst -> BEQ intt intt . intt   /   STR',
        'inst -> BEQ intt intt . intt   /   JMP'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '55' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 55, LABEL: 34, INT: 35 }
    },
    '47': {
      items: [
        'intt ->  . INT   /   LABEL',
        'intt ->  . label   /   LABEL',
        'label ->  . LABEL   /   LABEL',
        'intt ->  . INT   /   BEQ',
        'intt ->  . label   /   BEQ',
        'intt ->  . INT   /   BLT',
        'intt ->  . label   /   BLT',
        'intt ->  . INT   /   RDN',
        'intt ->  . label   /   RDN',
        'intt ->  . INT   /   PTN',
        'intt ->  . label   /   PTN',
        'intt ->  . INT   /   HLT',
        'intt ->  . label   /   HLT',
        'intt ->  . INT   /   <EOF>',
        'intt ->  . label   /   <EOF>',
        'intt ->  . INT   /   ADD',
        'intt ->  . label   /   ADD',
        'intt ->  . INT   /   SUB',
        'intt ->  . label   /   SUB',
        'intt ->  . INT   /   MUL',
        'intt ->  . label   /   MUL',
        'intt ->  . INT   /   MOV',
        'intt ->  . label   /   MOV',
        'intt ->  . INT   /   LOD',
        'intt ->  . label   /   LOD',
        'intt ->  . INT   /   STR',
        'intt ->  . label   /   STR',
        'intt ->  . INT   /   JMP',
        'intt ->  . label   /   JMP',
        'label ->  . LABEL   /   BEQ',
        'label ->  . LABEL   /   BLT',
        'label ->  . LABEL   /   RDN',
        'label ->  . LABEL   /   PTN',
        'label ->  . LABEL   /   HLT',
        'label ->  . LABEL   /   <EOF>',
        'label ->  . LABEL   /   ADD',
        'label ->  . LABEL   /   SUB',
        'label ->  . LABEL   /   MUL',
        'label ->  . LABEL   /   MOV',
        'label ->  . LABEL   /   LOD',
        'label ->  . LABEL   /   STR',
        'label ->  . LABEL   /   JMP',
        'inst -> BLT intt intt . intt   /   BEQ',
        'inst -> BLT intt intt . intt   /   BLT',
        'inst -> BLT intt intt . intt   /   RDN',
        'inst -> BLT intt intt . intt   /   LABEL',
        'inst -> BLT intt intt . intt   /   PTN',
        'inst -> BLT intt intt . intt   /   HLT',
        'inst -> BLT intt intt . intt   /   <EOF>',
        'inst -> BLT intt intt . intt   /   ADD',
        'inst -> BLT intt intt . intt   /   SUB',
        'inst -> BLT intt intt . intt   /   MUL',
        'inst -> BLT intt intt . intt   /   MOV',
        'inst -> BLT intt intt . intt   /   LOD',
        'inst -> BLT intt intt . intt   /   STR',
        'inst -> BLT intt intt . intt   /   JMP'
      ],
      actions: {
        label: [ '32' ],
        intt: [ '56' ],
        LABEL: [ 'S34' ],
        INT: [ 'S35' ]
      },
      next: { label: 32, intt: 56, LABEL: 34, INT: 35 }
    },
    '48': {
      items: [ 'instlist -> label COLON inst instlist .    /   <EOF>' ],
      actions: { '<EOF>': [ 'R <instlist -> label COLON inst instlist>' ] },
      next: {}
    },
    '49': {
      items: [
        'inst -> ADD intt intt intt .    /   BEQ',
        'inst -> ADD intt intt intt .    /   BLT',
        'inst -> ADD intt intt intt .    /   RDN',
        'inst -> ADD intt intt intt .    /   PTN',
        'inst -> ADD intt intt intt .    /   HLT',
        'inst -> ADD intt intt intt .    /   <EOF>',
        'inst -> ADD intt intt intt .    /   ADD',
        'inst -> ADD intt intt intt .    /   SUB',
        'inst -> ADD intt intt intt .    /   MUL',
        'inst -> ADD intt intt intt .    /   MOV',
        'inst -> ADD intt intt intt .    /   LABEL',
        'inst -> ADD intt intt intt .    /   LOD',
        'inst -> ADD intt intt intt .    /   STR',
        'inst -> ADD intt intt intt .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> ADD intt intt intt>' ],
        ADD: [ 'R <inst -> ADD intt intt intt>' ],
        SUB: [ 'R <inst -> ADD intt intt intt>' ],
        MUL: [ 'R <inst -> ADD intt intt intt>' ],
        MOV: [ 'R <inst -> ADD intt intt intt>' ],
        LOD: [ 'R <inst -> ADD intt intt intt>' ],
        STR: [ 'R <inst -> ADD intt intt intt>' ],
        JMP: [ 'R <inst -> ADD intt intt intt>' ],
        BEQ: [ 'R <inst -> ADD intt intt intt>' ],
        BLT: [ 'R <inst -> ADD intt intt intt>' ],
        RDN: [ 'R <inst -> ADD intt intt intt>' ],
        PTN: [ 'R <inst -> ADD intt intt intt>' ],
        HLT: [ 'R <inst -> ADD intt intt intt>' ],
        LABEL: [ 'R <inst -> ADD intt intt intt>' ]
      },
      next: {}
    },
    '50': {
      items: [
        'inst -> SUB intt intt intt .    /   BEQ',
        'inst -> SUB intt intt intt .    /   BLT',
        'inst -> SUB intt intt intt .    /   RDN',
        'inst -> SUB intt intt intt .    /   PTN',
        'inst -> SUB intt intt intt .    /   HLT',
        'inst -> SUB intt intt intt .    /   <EOF>',
        'inst -> SUB intt intt intt .    /   ADD',
        'inst -> SUB intt intt intt .    /   SUB',
        'inst -> SUB intt intt intt .    /   MUL',
        'inst -> SUB intt intt intt .    /   MOV',
        'inst -> SUB intt intt intt .    /   LOD',
        'inst -> SUB intt intt intt .    /   LABEL',
        'inst -> SUB intt intt intt .    /   STR',
        'inst -> SUB intt intt intt .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> SUB intt intt intt>' ],
        ADD: [ 'R <inst -> SUB intt intt intt>' ],
        SUB: [ 'R <inst -> SUB intt intt intt>' ],
        MUL: [ 'R <inst -> SUB intt intt intt>' ],
        MOV: [ 'R <inst -> SUB intt intt intt>' ],
        LOD: [ 'R <inst -> SUB intt intt intt>' ],
        STR: [ 'R <inst -> SUB intt intt intt>' ],
        JMP: [ 'R <inst -> SUB intt intt intt>' ],
        BEQ: [ 'R <inst -> SUB intt intt intt>' ],
        BLT: [ 'R <inst -> SUB intt intt intt>' ],
        RDN: [ 'R <inst -> SUB intt intt intt>' ],
        PTN: [ 'R <inst -> SUB intt intt intt>' ],
        HLT: [ 'R <inst -> SUB intt intt intt>' ],
        LABEL: [ 'R <inst -> SUB intt intt intt>' ]
      },
      next: {}
    },
    '51': {
      items: [
        'inst -> MUL intt intt intt .    /   BEQ',
        'inst -> MUL intt intt intt .    /   BLT',
        'inst -> MUL intt intt intt .    /   RDN',
        'inst -> MUL intt intt intt .    /   PTN',
        'inst -> MUL intt intt intt .    /   HLT',
        'inst -> MUL intt intt intt .    /   <EOF>',
        'inst -> MUL intt intt intt .    /   ADD',
        'inst -> MUL intt intt intt .    /   SUB',
        'inst -> MUL intt intt intt .    /   MUL',
        'inst -> MUL intt intt intt .    /   MOV',
        'inst -> MUL intt intt intt .    /   LOD',
        'inst -> MUL intt intt intt .    /   LABEL',
        'inst -> MUL intt intt intt .    /   STR',
        'inst -> MUL intt intt intt .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> MUL intt intt intt>' ],
        ADD: [ 'R <inst -> MUL intt intt intt>' ],
        SUB: [ 'R <inst -> MUL intt intt intt>' ],
        MUL: [ 'R <inst -> MUL intt intt intt>' ],
        MOV: [ 'R <inst -> MUL intt intt intt>' ],
        LOD: [ 'R <inst -> MUL intt intt intt>' ],
        STR: [ 'R <inst -> MUL intt intt intt>' ],
        JMP: [ 'R <inst -> MUL intt intt intt>' ],
        BEQ: [ 'R <inst -> MUL intt intt intt>' ],
        BLT: [ 'R <inst -> MUL intt intt intt>' ],
        RDN: [ 'R <inst -> MUL intt intt intt>' ],
        PTN: [ 'R <inst -> MUL intt intt intt>' ],
        HLT: [ 'R <inst -> MUL intt intt intt>' ],
        LABEL: [ 'R <inst -> MUL intt intt intt>' ]
      },
      next: {}
    },
    '52': {
      items: [
        'inst -> LOD intt intt intt .    /   LABEL',
        'inst -> LOD intt intt intt .    /   BEQ',
        'inst -> LOD intt intt intt .    /   BLT',
        'inst -> LOD intt intt intt .    /   RDN',
        'inst -> LOD intt intt intt .    /   PTN',
        'inst -> LOD intt intt intt .    /   HLT',
        'inst -> LOD intt intt intt .    /   <EOF>',
        'inst -> LOD intt intt intt .    /   ADD',
        'inst -> LOD intt intt intt .    /   SUB',
        'inst -> LOD intt intt intt .    /   MUL',
        'inst -> LOD intt intt intt .    /   MOV',
        'inst -> LOD intt intt intt .    /   LOD',
        'inst -> LOD intt intt intt .    /   STR',
        'inst -> LOD intt intt intt .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> LOD intt intt intt>' ],
        ADD: [ 'R <inst -> LOD intt intt intt>' ],
        SUB: [ 'R <inst -> LOD intt intt intt>' ],
        MUL: [ 'R <inst -> LOD intt intt intt>' ],
        MOV: [ 'R <inst -> LOD intt intt intt>' ],
        LOD: [ 'R <inst -> LOD intt intt intt>' ],
        STR: [ 'R <inst -> LOD intt intt intt>' ],
        JMP: [ 'R <inst -> LOD intt intt intt>' ],
        BEQ: [ 'R <inst -> LOD intt intt intt>' ],
        BLT: [ 'R <inst -> LOD intt intt intt>' ],
        RDN: [ 'R <inst -> LOD intt intt intt>' ],
        PTN: [ 'R <inst -> LOD intt intt intt>' ],
        HLT: [ 'R <inst -> LOD intt intt intt>' ],
        LABEL: [ 'R <inst -> LOD intt intt intt>' ]
      },
      next: {}
    },
    '53': {
      items: [
        'inst -> STR intt intt intt .    /   BEQ',
        'inst -> STR intt intt intt .    /   LABEL',
        'inst -> STR intt intt intt .    /   BLT',
        'inst -> STR intt intt intt .    /   RDN',
        'inst -> STR intt intt intt .    /   PTN',
        'inst -> STR intt intt intt .    /   HLT',
        'inst -> STR intt intt intt .    /   <EOF>',
        'inst -> STR intt intt intt .    /   ADD',
        'inst -> STR intt intt intt .    /   SUB',
        'inst -> STR intt intt intt .    /   MUL',
        'inst -> STR intt intt intt .    /   MOV',
        'inst -> STR intt intt intt .    /   LOD',
        'inst -> STR intt intt intt .    /   STR',
        'inst -> STR intt intt intt .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> STR intt intt intt>' ],
        ADD: [ 'R <inst -> STR intt intt intt>' ],
        SUB: [ 'R <inst -> STR intt intt intt>' ],
        MUL: [ 'R <inst -> STR intt intt intt>' ],
        MOV: [ 'R <inst -> STR intt intt intt>' ],
        LOD: [ 'R <inst -> STR intt intt intt>' ],
        STR: [ 'R <inst -> STR intt intt intt>' ],
        JMP: [ 'R <inst -> STR intt intt intt>' ],
        BEQ: [ 'R <inst -> STR intt intt intt>' ],
        BLT: [ 'R <inst -> STR intt intt intt>' ],
        RDN: [ 'R <inst -> STR intt intt intt>' ],
        PTN: [ 'R <inst -> STR intt intt intt>' ],
        HLT: [ 'R <inst -> STR intt intt intt>' ],
        LABEL: [ 'R <inst -> STR intt intt intt>' ]
      },
      next: {}
    },
    '54': {
      items: [
        'inst -> JMP intt intt intt .    /   BEQ',
        'inst -> JMP intt intt intt .    /   LABEL',
        'inst -> JMP intt intt intt .    /   BLT',
        'inst -> JMP intt intt intt .    /   RDN',
        'inst -> JMP intt intt intt .    /   PTN',
        'inst -> JMP intt intt intt .    /   HLT',
        'inst -> JMP intt intt intt .    /   <EOF>',
        'inst -> JMP intt intt intt .    /   ADD',
        'inst -> JMP intt intt intt .    /   SUB',
        'inst -> JMP intt intt intt .    /   MUL',
        'inst -> JMP intt intt intt .    /   MOV',
        'inst -> JMP intt intt intt .    /   LOD',
        'inst -> JMP intt intt intt .    /   STR',
        'inst -> JMP intt intt intt .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> JMP intt intt intt>' ],
        ADD: [ 'R <inst -> JMP intt intt intt>' ],
        SUB: [ 'R <inst -> JMP intt intt intt>' ],
        MUL: [ 'R <inst -> JMP intt intt intt>' ],
        MOV: [ 'R <inst -> JMP intt intt intt>' ],
        LOD: [ 'R <inst -> JMP intt intt intt>' ],
        STR: [ 'R <inst -> JMP intt intt intt>' ],
        JMP: [ 'R <inst -> JMP intt intt intt>' ],
        BEQ: [ 'R <inst -> JMP intt intt intt>' ],
        BLT: [ 'R <inst -> JMP intt intt intt>' ],
        RDN: [ 'R <inst -> JMP intt intt intt>' ],
        PTN: [ 'R <inst -> JMP intt intt intt>' ],
        HLT: [ 'R <inst -> JMP intt intt intt>' ],
        LABEL: [ 'R <inst -> JMP intt intt intt>' ]
      },
      next: {}
    },
    '55': {
      items: [
        'inst -> BEQ intt intt intt .    /   BEQ',
        'inst -> BEQ intt intt intt .    /   BLT',
        'inst -> BEQ intt intt intt .    /   LABEL',
        'inst -> BEQ intt intt intt .    /   RDN',
        'inst -> BEQ intt intt intt .    /   PTN',
        'inst -> BEQ intt intt intt .    /   HLT',
        'inst -> BEQ intt intt intt .    /   <EOF>',
        'inst -> BEQ intt intt intt .    /   ADD',
        'inst -> BEQ intt intt intt .    /   SUB',
        'inst -> BEQ intt intt intt .    /   MUL',
        'inst -> BEQ intt intt intt .    /   MOV',
        'inst -> BEQ intt intt intt .    /   LOD',
        'inst -> BEQ intt intt intt .    /   STR',
        'inst -> BEQ intt intt intt .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> BEQ intt intt intt>' ],
        ADD: [ 'R <inst -> BEQ intt intt intt>' ],
        SUB: [ 'R <inst -> BEQ intt intt intt>' ],
        MUL: [ 'R <inst -> BEQ intt intt intt>' ],
        MOV: [ 'R <inst -> BEQ intt intt intt>' ],
        LOD: [ 'R <inst -> BEQ intt intt intt>' ],
        STR: [ 'R <inst -> BEQ intt intt intt>' ],
        JMP: [ 'R <inst -> BEQ intt intt intt>' ],
        BEQ: [ 'R <inst -> BEQ intt intt intt>' ],
        BLT: [ 'R <inst -> BEQ intt intt intt>' ],
        RDN: [ 'R <inst -> BEQ intt intt intt>' ],
        PTN: [ 'R <inst -> BEQ intt intt intt>' ],
        HLT: [ 'R <inst -> BEQ intt intt intt>' ],
        LABEL: [ 'R <inst -> BEQ intt intt intt>' ]
      },
      next: {}
    },
    '56': {
      items: [
        'inst -> BLT intt intt intt .    /   BEQ',
        'inst -> BLT intt intt intt .    /   BLT',
        'inst -> BLT intt intt intt .    /   RDN',
        'inst -> BLT intt intt intt .    /   LABEL',
        'inst -> BLT intt intt intt .    /   PTN',
        'inst -> BLT intt intt intt .    /   HLT',
        'inst -> BLT intt intt intt .    /   <EOF>',
        'inst -> BLT intt intt intt .    /   ADD',
        'inst -> BLT intt intt intt .    /   SUB',
        'inst -> BLT intt intt intt .    /   MUL',
        'inst -> BLT intt intt intt .    /   MOV',
        'inst -> BLT intt intt intt .    /   LOD',
        'inst -> BLT intt intt intt .    /   STR',
        'inst -> BLT intt intt intt .    /   JMP'
      ],
      actions: {
        '<EOF>': [ 'R <inst -> BLT intt intt intt>' ],
        ADD: [ 'R <inst -> BLT intt intt intt>' ],
        SUB: [ 'R <inst -> BLT intt intt intt>' ],
        MUL: [ 'R <inst -> BLT intt intt intt>' ],
        MOV: [ 'R <inst -> BLT intt intt intt>' ],
        LOD: [ 'R <inst -> BLT intt intt intt>' ],
        STR: [ 'R <inst -> BLT intt intt intt>' ],
        JMP: [ 'R <inst -> BLT intt intt intt>' ],
        BEQ: [ 'R <inst -> BLT intt intt intt>' ],
        BLT: [ 'R <inst -> BLT intt intt intt>' ],
        RDN: [ 'R <inst -> BLT intt intt intt>' ],
        PTN: [ 'R <inst -> BLT intt intt intt>' ],
        HLT: [ 'R <inst -> BLT intt intt intt>' ],
        LABEL: [ 'R <inst -> BLT intt intt intt>' ]
      },
      next: {}
    }
  }
}
